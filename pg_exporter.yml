# PostgreSQL/Pgbouncer Metric Collector Definition

##
# Author:   Vonng (fengruohang@outlook.com)
# Desc  :   pg_exporter metrics collector definition
# Ver   :   PostgreSQL 10~14 pgbouncer 1.9+
# Ctime :   2019-12-09
# Mtime :   2022-05-13
# Copyright (C) 2019-2022 Ruohang Feng

##
# 1. Configuration File
#
# The configuration file for pg_exporter is a YAML file.
# Default configuration are retrieved via following precedence:
#     1. command line args:      --config=<config path>
#     2. environment variables:  PG_EXPORTER_CONFIG=<config path>
#     3. pg_exporter.yml        (Current directory)
#     4. /etc/pg_exporter.yml   (etc config file)
#     5. /etc/pg_exporter       (etc config dir)

##
# 2. Config Format
#
# pg_exporter config could be a single YAML file, or a directory containing a series of separated YAML files.
# each YAML config file is consist of one or more metrics Collector definition. Which are top-level objects
# If a directory is provided, all YAML in that directory will be merged in alphabetic order.
# Collector definition examples are shown below.

##
# 3. Collector Example
#
#  # Here is an example of a metrics collector definition
#  pg_primary_only:       # Collector branch name. Must be UNIQUE among the entire configuration
#    name: pg             # Collector namespace, used as METRIC PREFIX, set to branch name by default, can be override
#                               the Same namespace may contain multiple collector branches. It`s the user`s responsibility
#                               to make sure that AT MOST ONE collector is picked for each namespace.
#
#    desc: PostgreSQL basic information (on primary)                 # Collector description
#    query: |                                                        # SQL string
#
#      SELECT extract(EPOCH FROM CURRENT_TIMESTAMP)                  AS timestamp,
#             pg_current_wal_lsn() - `0/0`                           AS lsn,
#             pg_current_wal_insert_lsn() - `0/0`                    AS insert_lsn,
#             pg_current_wal_lsn() - `0/0`                           AS write_lsn,
#             pg_current_wal_flush_lsn() - `0/0`                     AS flush_lsn,
#             extract(EPOCH FROM now() - pg_postmaster_start_time()) AS uptime,
#             extract(EPOCH FROM now() - pg_conf_load_time())        AS conf_reload_time,
#             pg_is_in_backup()                                      AS is_in_backup,
#             extract(EPOCH FROM now() - pg_backup_start_time())     AS backup_time;
#
#                             # [OPTIONAL] metadata fields, control collector behavior
#    ttl: 10                  # Cache TTL: in seconds, how long will pg_exporter cache this collector`s query result.
#    timeout: 0.1             # Query Timeout: in seconds, query that exceed this limit will be canceled.
#    min_version: 100000      # minimal supported version, boundary IS included. In server version number format,
#    max_version: 130000      # maximal supported version, boundary NOT included, In server version number format
#    fatal: false             # Collector marked `fatal` fails, the entire scrape will abort immediately and marked as failed
#    skip: false              # Collector marked `skip` will not be installed during the planning procedure
#
#    tags: [cluster, primary] # list of strings, which could be:
#                               * `cluster` marks this query as cluster level, so it will only execute once for the same PostgreSQL Server
#                               * `primary` or `master`  mark this query can only run on a primary instance (WILL NOT execute if pg_is_in_recovery())
#                               * `standby` or `replica` mark this query can only run on a replica instance (WILL execute if pg_is_in_recovery())
#                             some special tag prefix have special interpretation:
#                               * `dbname:<dbname>` means this query will ONLY be executed on database with name `<dbname>`
#                               * `username:<user>` means this query will only be executed when connect with user `<user>`
#                               * `extension:<extname>` means this query will only be executed when extension `<extname>` is installed
#                               * `schema:<nspname>` means this query will only by executed when schema `<nspname>` exist
#                               * `not:<negtag>` means this query WILL NOT be executed when exporter is tagged with `<negtag>`
#                               * `<tag>` means this query WILL be executed when exporter is tagged with `<tag>`
#                               ( <tag> could not be cluster,primary,standby,master,replica,etc...)
#
#
#    metrics:                 # List of returned columns, each column must have a `name` and `usage`, `rename` and `description` are optional
#      - timestamp:           # Column name, should be exactly the same as returned column name
#          usage: GAUGE       # Metric type, `usage` could be
#                                    * DISCARD: completely ignoring this field
#                                    * LABEL:   use columnName=columnValue as a label in metric
#                                    * GAUGE:   Mark column as a gauge metric, full name will be `<query.name>_<column.name>`
#                                    * COUNTER: Same as above, except it is a counter rather than a gauge.
#          rename: ts         # [OPTIONAL] Alias, optional, the alias will be used instead of the column name
#          description: xxxx  # [OPTIONAL] Description of the column, will be used as a metric description
#          default: 0         # [OPTIONAL] Default value, will be used when column is NULL
#          scale:   1000      # [OPTIONAL] Scale the value by this factor
#      - lsn:
#          usage: COUNTER
#          description: log sequence number, current write location (on primary)
#      - insert_lsn:
#          usage: COUNTER
#          description: primary only, location of current wal inserting
#      - write_lsn:
#          usage: COUNTER
#          description: primary only, location of current wal writing
#      - flush_lsn:
#          usage: COUNTER
#          description: primary only, location of current wal syncing
#      - uptime:
#          usage: GAUGE
#          description: seconds since postmaster start
#      - conf_reload_time:
#          usage: GAUGE
#          description: seconds since last configuration reload
#      - is_in_backup:
#          usage: GAUGE
#          description: 1 if backup is in progress
#      - backup_time:
#          usage: GAUGE
#          description: seconds since the current backup start. null if don`t have one

##
# 4. Collector Presets
#
# pg_exporter is shipped with a series of preset collectors (already numbered and ordered by filename)
#
# 1xx  Basic metrics:        basic info, metadata, settings
# 2xx  Replication metrics:  replication, walreceiver, downstream, sync standby, slots, subscription
# 3xx  Persist metrics:      size, wal, background writer, checkpoint, recovery, cache, shmem usage
# 4xx  Activity metrics:     backend count group by state, wait event, locks, xacts, queries
# 5xx  Progress metrics:     clustering, vacuuming, indexing, basebackup, copy
# 6xx  Database metrics:     pg_database, publication, subscription
# 7xx  Object metrics:       pg_class, table, index, function, sequence, default partition
# 8xx  Optional metrics:     optional metrics collector (disable by default, slow queries)
# 9xx  Pgbouncer metrics:    metrics from pgbouncer admin database `pgbouncer`
#
# 100-599 Metrics for entire database cluster  (scrape once)
# 600-899 Metrics for single database instance (scrape for each database ,except for pg_db itself)

##
# 5. Cache TTL
#
# Cache can be used for reducing query overhead, it can be enabled by setting a non-zero value for `ttl`
# It is highly recommended to use cache to avoid duplicate scrapes. Especially when you got multiple Prometheus
# scraping the same instance with slow monitoring queries. Setting `ttl` to zero or leaving blank will disable
# result caching, which is the default behavior
#
# TTL has to be smaller than your scrape interval. 15s scrape interval and 10s TTL is a good start for
# production environment. Some expensive monitoring queries (such as size/bloat check) will have longer `ttl`
# which can also be used as a mechanism to achieve `different scrape frequency`

##
# 6. Query Timeout
#
# Collectors can be configured with an optional Timeout. If the collector`s query executes more than that
# timeout, it will be canceled immediately. Setting the `timeout` to 0 or leaving blank will reset it to
# default timeout 0.1 (100ms). Setting it to any negative number will disable the query timeout feature.
# All queries have a default timeout of 100ms, if exceed, the query will be canceled immediately to avoid
# avalanche. You can explicitly overwrite that option. but beware: in some extreme cases, if all your
# timeout sum up greater your scrape/cache interval (usually 15s), the query may still be jammed.
# or, you can just disable potential slow queries.

##
# 7. Version Compatibility
#
# Each collector has two optional version compatibility parameters: `min_version` and `max_version`.
# These two parameters specify the version compatibility of the collector. If target postgres/pgbouncer
# version is less than `min_version`, or higher than `max_version`, the collector will not be installed.
# These two parameters are using PostgreSQL server version number format, which is a 6-digit integer
# format as <major:2 digit><minor:2 digit>:<release: 2 digit>.
# For example, 090600 stands for 9.6 and 120100 stands for 12.1
# And beware that version compatibility range is left-inclusive right exclusive: [min, max), set to zero or
# leaving blank will affect as -inf or +inf

##
# 8. Fatality
#
# If a collector is marked with `fatal` falls, the entire scrape operation will be marked as fail and key metrics
# `pg_up` / `pgbouncer_up` will be reset to 0. It is always a good practice to set up AT LEAST ONE fatal
# collector for pg_exporter. `pg.pg_primary_only` and `pgbouncer_list` are the default fatal collector.
#
# If a collector without `fatal` flag fails, it will increase global fail counters. But the scrape operation
# will carry on. The entire scrape result will not be marked as faile, thus will not affect the `<xx>_up` metric.

##
# 9. Skip
#
# Collector with `skip` flag set to true will NOT be installed.
# This could be a handy option to disable collectors
#
# 10. Tags and Planning
#
# Tags are designed for collector planning & schedule. It can be handy to customize which queries run
# on which instances. And thus you can use one-single monolith config for multiple environments
#
#  Tags are a list of strings, each string could be:
#  Pre-defined special tags
#    * `cluster` marks this collector as cluster level, so it will ONLY BE EXECUTED ONCE for the same PostgreSQL Server
#    * `primary` or `master` mark this collector as primary-only, so it WILL NOT work iff pg_is_in_recovery()
#    * `standby` or `replica` mark this collector as replica-only, so it WILL work iff pg_is_in_recovery()
#  Special tag prefix which have different interpretation:
#    * `dbname:<dbname>` means this collector will ONLY work on database with name `<dbname>`
#    * `username:<user>` means this collector will ONLY work when connect with user `<user>`
#    * `extension:<extname>` means this collector will ONLY work when extension `<extname>` is installed
#    * `schema:<nspname>` means this collector will only work when schema `<nspname>` exists
#  Customized positive tags (filter) and negative tags (taint)
#    * `not:<negtag>` means this collector WILL NOT work when exporter is tagged with `<negtag>`
#    * `<tag>` means this query WILL work if exporter is tagged with `<tag>` (special tags not included)
#
#  pg_exporter will trigger the Planning procedure after connecting to the target. It will gather database facts
#  and match them with tags and other metadata (such as supported version range). Collector will only
#  be installed if and only if it is compatible with the target server.
##
# SYNNOPSIS
#       pg.pg_primary_only_*
#
# DESCRIPTION
#       PostgreSQL basic information (on primary)
#
# OPTIONS
#       Tags       [cluster, primary]
#       TTL        1
#       Priority   0
#       Timeout    100ms
#       Fatal      true
#       Version    100000 ~ 150000
#       Source     110-pg.yml
#
# METRICS
#       timestamp (GAUGE)
#           current database timestamp in unix epoch
#       uptime (GAUGE)
#           seconds since postmaster start
#       boot_time (GAUGE)
#           postmaster boot timestamp in unix epoch
#       lsn (COUNTER)
#           log sequence number, current write location
#       insert_lsn (COUNTER)
#           primary only, location of current wal inserting
#       write_lsn (COUNTER)
#           primary only, location of current wal writing
#       flush_lsn (COUNTER)
#           primary only, location of current wal syncing
#       receive_lsn (COUNTER)
#           replica only, location of wal synced to disk
#       replay_lsn (COUNTER)
#           replica only, location of wal applied
#       conf_reload_time (GAUGE)
#           seconds since last configuration reload
#       last_replay_time (GAUGE)
#           time when last transaction been replayed
#       lag (GAUGE)
#           replica only, replication lag in seconds
#       is_in_recovery (GAUGE)
#           1 if in recovery mode
#       is_wal_replay_paused (GAUGE)
#           1 if wal play is paused
#       is_in_backup (GAUGE)
#           1 if backup is in progress
#       backup_time (GAUGE)
#           seconds since current backup start
#
pg_primary_only:
    name: pg
    desc: PostgreSQL basic information (on primary)
    query: |
        SELECT extract(EPOCH FROM CURRENT_TIMESTAMP)                  AS timestamp,
               extract(EPOCH FROM now() - pg_postmaster_start_time()) AS uptime,
               extract(EPOCH FROM pg_postmaster_start_time())         AS boot_time,
               pg_current_wal_lsn() - '0/0'                           AS lsn,
               pg_current_wal_insert_lsn() - '0/0'                    AS insert_lsn,
               pg_current_wal_lsn() - '0/0'                           AS write_lsn,
               pg_current_wal_flush_lsn() - '0/0'                     AS flush_lsn,
               NULL::BIGINT                                           AS receive_lsn,
               NULL::BIGINT                                           AS replay_lsn,
               extract(EPOCH FROM now() - pg_conf_load_time())        AS conf_reload_time,
               NULL::FLOAT                                            AS last_replay_time,
               0::FLOAT                                               AS lag,
               pg_is_in_recovery()                                    AS is_in_recovery,
               FALSE                                                  AS is_wal_replay_paused,
               pg_is_in_backup()                                      AS is_in_backup,
               extract(EPOCH FROM now() - pg_backup_start_time())     AS backup_time;
    tags:
        - cluster
        - primary
    ttl: 1
    timeout: 0.1
    min_version: 100000
    max_version: 150000
    fatal: true
    skip: false
    metrics:
        - timestamp:
            name: timestamp
            usage: GAUGE
            description: current database timestamp in unix epoch
        - uptime:
            name: uptime
            usage: GAUGE
            description: seconds since postmaster start
        - boot_time:
            name: boot_time
            usage: GAUGE
            description: postmaster boot timestamp in unix epoch
        - lsn:
            name: lsn
            usage: COUNTER
            description: log sequence number, current write location
        - insert_lsn:
            name: insert_lsn
            usage: COUNTER
            description: primary only, location of current wal inserting
        - write_lsn:
            name: write_lsn
            usage: COUNTER
            description: primary only, location of current wal writing
        - flush_lsn:
            name: flush_lsn
            usage: COUNTER
            description: primary only, location of current wal syncing
        - receive_lsn:
            name: receive_lsn
            usage: COUNTER
            description: replica only, location of wal synced to disk
        - replay_lsn:
            name: replay_lsn
            usage: COUNTER
            description: replica only, location of wal applied
        - conf_reload_time:
            name: conf_reload_time
            usage: GAUGE
            description: seconds since last configuration reload
        - last_replay_time:
            name: last_replay_time
            usage: GAUGE
            description: time when last transaction been replayed
        - lag:
            name: lag
            usage: GAUGE
            description: replica only, replication lag in seconds
        - is_in_recovery:
            name: is_in_recovery
            usage: GAUGE
            description: 1 if in recovery mode
        - is_wal_replay_paused:
            name: is_wal_replay_paused
            usage: GAUGE
            description: 1 if wal play is paused
        - is_in_backup:
            name: is_in_backup
            usage: GAUGE
            description: 1 if backup is in progress
        - backup_time:
            name: backup_time
            usage: GAUGE
            description: seconds since current backup start

##
# SYNNOPSIS
#       pg.pg_primary_only_15_*
#
# DESCRIPTION
#       PostgreSQL basic information (on primary)
#
# OPTIONS
#       Tags       [cluster, primary]
#       TTL        1
#       Priority   0
#       Timeout    100ms
#       Fatal      true
#       Version    150000 ~ higher
#       Source     110-pg.yml
#
# METRICS
#       timestamp (GAUGE)
#           current database timestamp in unix epoch
#       uptime (GAUGE)
#           seconds since postmaster start
#       boot_time (GAUGE)
#           postmaster boot timestamp in unix epoch
#       lsn (COUNTER)
#           log sequence number, current write location
#       insert_lsn (COUNTER)
#           primary only, location of current wal inserting
#       write_lsn (COUNTER)
#           primary only, location of current wal writing
#       flush_lsn (COUNTER)
#           primary only, location of current wal syncing
#       receive_lsn (COUNTER)
#           replica only, location of wal synced to disk
#       replay_lsn (COUNTER)
#           replica only, location of wal applied
#       conf_reload_time (GAUGE)
#           seconds since last configuration reload
#       last_replay_time (GAUGE)
#           time when last transaction been replayed
#       lag (GAUGE)
#           replica only, replication lag in seconds
#       is_in_recovery (GAUGE)
#           1 if in recovery mode
#       is_wal_replay_paused (GAUGE)
#           1 if wal play is paused
#
pg_primary_only_15:
    name: pg
    desc: PostgreSQL basic information (on primary)
    query: |
        SELECT extract(EPOCH FROM CURRENT_TIMESTAMP)                  AS timestamp,
               extract(EPOCH FROM now() - pg_postmaster_start_time()) AS uptime,
               extract(EPOCH FROM pg_postmaster_start_time())         AS boot_time,
               pg_current_wal_lsn() - '0/0'                           AS lsn,
               pg_current_wal_insert_lsn() - '0/0'                    AS insert_lsn,
               pg_current_wal_lsn() - '0/0'                           AS write_lsn,
               pg_current_wal_flush_lsn() - '0/0'                     AS flush_lsn,
               NULL::BIGINT                                           AS receive_lsn,
               NULL::BIGINT                                           AS replay_lsn,
               extract(EPOCH FROM now() - pg_conf_load_time())        AS conf_reload_time,
               NULL::FLOAT                                            AS last_replay_time,
               0::FLOAT                                               AS lag,
               pg_is_in_recovery()                                    AS is_in_recovery,
               FALSE                                                  AS is_wal_replay_paused;
    tags:
        - cluster
        - primary
    ttl: 1
    timeout: 0.1
    min_version: 150000
    max_version: 0
    fatal: true
    skip: false
    metrics:
        - timestamp:
            name: timestamp
            usage: GAUGE
            description: current database timestamp in unix epoch
        - uptime:
            name: uptime
            usage: GAUGE
            description: seconds since postmaster start
        - boot_time:
            name: boot_time
            usage: GAUGE
            description: postmaster boot timestamp in unix epoch
        - lsn:
            name: lsn
            usage: COUNTER
            description: log sequence number, current write location
        - insert_lsn:
            name: insert_lsn
            usage: COUNTER
            description: primary only, location of current wal inserting
        - write_lsn:
            name: write_lsn
            usage: COUNTER
            description: primary only, location of current wal writing
        - flush_lsn:
            name: flush_lsn
            usage: COUNTER
            description: primary only, location of current wal syncing
        - receive_lsn:
            name: receive_lsn
            usage: COUNTER
            description: replica only, location of wal synced to disk
        - replay_lsn:
            name: replay_lsn
            usage: COUNTER
            description: replica only, location of wal applied
        - conf_reload_time:
            name: conf_reload_time
            usage: GAUGE
            description: seconds since last configuration reload
        - last_replay_time:
            name: last_replay_time
            usage: GAUGE
            description: time when last transaction been replayed
        - lag:
            name: lag
            usage: GAUGE
            description: replica only, replication lag in seconds
        - is_in_recovery:
            name: is_in_recovery
            usage: GAUGE
            description: 1 if in recovery mode
        - is_wal_replay_paused:
            name: is_wal_replay_paused
            usage: GAUGE
            description: 1 if wal play is paused

##
# SYNNOPSIS
#       pg.pg_replica_only_*
#
# DESCRIPTION
#       PostgreSQL basic information (on replica)
#
# OPTIONS
#       Tags       [cluster, replica]
#       TTL        1
#       Priority   0
#       Timeout    100ms
#       Fatal      true
#       Version    100000 ~ 150000
#       Source     110-pg.yml
#
# METRICS
#       timestamp (GAUGE)
#           database current timestamp
#       uptime (GAUGE)
#           seconds since postmaster start
#       boot_time (GAUGE)
#           unix timestamp when postmaster boot
#       lsn (COUNTER)
#           log sequence number, current write location
#       insert_lsn (COUNTER)
#           primary only, location of current wal inserting
#       write_lsn (COUNTER)
#           primary only, location of current wal writing
#       flush_lsn (COUNTER)
#           primary only, location of current wal syncing
#       receive_lsn (COUNTER)
#           replica only, location of wal synced to disk
#       replay_lsn (COUNTER)
#           replica only, location of wal applied
#       conf_reload_time (GAUGE)
#           seconds since last configuration reload
#       last_replay_time (GAUGE)
#           time when last transaction been replayed
#       lag (GAUGE)
#           replica only, replication lag in seconds
#       is_in_recovery (GAUGE)
#           1 if in recovery mode
#       is_wal_replay_paused (GAUGE)
#           1 if wal play paused
#       is_in_backup (GAUGE)
#           1 if backup is in progress
#       backup_time (GAUGE)
#           seconds since current backup start
#
pg_replica_only:
    name: pg
    desc: PostgreSQL basic information (on replica)
    query: |
        SELECT extract(EPOCH FROM CURRENT_TIMESTAMP)                                    AS timestamp,
               extract(EPOCH FROM now() - pg_postmaster_start_time())                   AS uptime,
               extract(EPOCH FROM pg_postmaster_start_time())                           AS boot_time,
               pg_last_wal_replay_lsn() - '0/0'                                         AS lsn,
               NULL::BIGINT                                                             AS insert_lsn,
               NULL::BIGINT                                                             AS write_lsn,
               NULL::BIGINT                                                             AS flush_lsn,
               pg_last_wal_receive_lsn() - '0/0'                                        AS receive_lsn,
               pg_last_wal_replay_lsn() - '0/0'                                         AS replay_lsn,
               extract(EPOCH FROM now() - pg_conf_load_time())                          AS conf_reload_time,
               extract(EPOCH FROM pg_last_xact_replay_timestamp())                      AS last_replay_time,
               CASE
                   WHEN pg_last_wal_receive_lsn() = pg_last_wal_replay_lsn() THEN 0
                   ELSE EXTRACT(EPOCH FROM now() - pg_last_xact_replay_timestamp()) END AS lag,
               pg_is_in_recovery()                                                      AS is_in_recovery,
               pg_is_wal_replay_paused()                                                AS is_wal_replay_paused,
               pg_is_in_backup()                                                        AS is_in_backup,
               extract(EPOCH FROM now() - pg_backup_start_time())                       AS backup_time;
    tags:
        - cluster
        - replica
    ttl: 1
    timeout: 0.1
    min_version: 100000
    max_version: 150000
    fatal: true
    skip: false
    metrics:
        - timestamp:
            name: timestamp
            usage: GAUGE
            description: database current timestamp
        - uptime:
            name: uptime
            usage: GAUGE
            description: seconds since postmaster start
        - boot_time:
            name: boot_time
            usage: GAUGE
            description: unix timestamp when postmaster boot
        - lsn:
            name: lsn
            usage: COUNTER
            description: log sequence number, current write location
        - insert_lsn:
            name: insert_lsn
            usage: COUNTER
            description: primary only, location of current wal inserting
        - write_lsn:
            name: write_lsn
            usage: COUNTER
            description: primary only, location of current wal writing
        - flush_lsn:
            name: flush_lsn
            usage: COUNTER
            description: primary only, location of current wal syncing
        - receive_lsn:
            name: receive_lsn
            usage: COUNTER
            description: replica only, location of wal synced to disk
        - replay_lsn:
            name: replay_lsn
            usage: COUNTER
            description: replica only, location of wal applied
        - conf_reload_time:
            name: conf_reload_time
            usage: GAUGE
            description: seconds since last configuration reload
        - last_replay_time:
            name: last_replay_time
            usage: GAUGE
            description: time when last transaction been replayed
        - lag:
            name: lag
            usage: GAUGE
            description: replica only, replication lag in seconds
        - is_in_recovery:
            name: is_in_recovery
            usage: GAUGE
            description: 1 if in recovery mode
        - is_wal_replay_paused:
            name: is_wal_replay_paused
            usage: GAUGE
            description: 1 if wal play paused
        - is_in_backup:
            name: is_in_backup
            usage: GAUGE
            description: 1 if backup is in progress
        - backup_time:
            name: backup_time
            usage: GAUGE
            description: seconds since current backup start

##
# SYNNOPSIS
#       pg.pg_replica_only_15_*
#
# DESCRIPTION
#       PostgreSQL basic information (on replica)
#
# OPTIONS
#       Tags       [cluster, replica]
#       TTL        1
#       Priority   0
#       Timeout    100ms
#       Fatal      true
#       Version    150000 ~ higher
#       Source     110-pg.yml
#
# METRICS
#       timestamp (GAUGE)
#           database current timestamp
#       uptime (GAUGE)
#           seconds since postmaster start
#       boot_time (GAUGE)
#           unix timestamp when postmaster boot
#       lsn (COUNTER)
#           log sequence number, current write location
#       insert_lsn (COUNTER)
#           primary only, location of current wal inserting
#       write_lsn (COUNTER)
#           primary only, location of current wal writing
#       flush_lsn (COUNTER)
#           primary only, location of current wal syncing
#       receive_lsn (COUNTER)
#           replica only, location of wal synced to disk
#       replay_lsn (COUNTER)
#           replica only, location of wal applied
#       conf_reload_time (GAUGE)
#           seconds since last configuration reload
#       last_replay_time (GAUGE)
#           time when last transaction been replayed
#       lag (GAUGE)
#           replica only, replication lag in seconds
#       is_in_recovery (GAUGE)
#           1 if in recovery mode
#       is_wal_replay_paused (GAUGE)
#           1 if wal play paused
#
pg_replica_only_15:
    name: pg
    desc: PostgreSQL basic information (on replica)
    query: |
        SELECT extract(EPOCH FROM CURRENT_TIMESTAMP)                                    AS timestamp,
               extract(EPOCH FROM now() - pg_postmaster_start_time())                   AS uptime,
               extract(EPOCH FROM pg_postmaster_start_time())                           AS boot_time,
               pg_last_wal_replay_lsn() - '0/0'                                         AS lsn,
               NULL::BIGINT                                                             AS insert_lsn,
               NULL::BIGINT                                                             AS write_lsn,
               NULL::BIGINT                                                             AS flush_lsn,
               pg_last_wal_receive_lsn() - '0/0'                                        AS receive_lsn,
               pg_last_wal_replay_lsn() - '0/0'                                         AS replay_lsn,
               extract(EPOCH FROM now() - pg_conf_load_time())                          AS conf_reload_time,
               extract(EPOCH FROM pg_last_xact_replay_timestamp())                      AS last_replay_time,
               CASE
                   WHEN pg_last_wal_receive_lsn() = pg_last_wal_replay_lsn() THEN 0
                   ELSE EXTRACT(EPOCH FROM now() - pg_last_xact_replay_timestamp()) END AS lag,
               pg_is_in_recovery()                                                      AS is_in_recovery,
               pg_is_wal_replay_paused()                                                AS is_wal_replay_paused;
    tags:
        - cluster
        - replica
    ttl: 1
    timeout: 0.1
    min_version: 150000
    max_version: 0
    fatal: true
    skip: false
    metrics:
        - timestamp:
            name: timestamp
            usage: GAUGE
            description: database current timestamp
        - uptime:
            name: uptime
            usage: GAUGE
            description: seconds since postmaster start
        - boot_time:
            name: boot_time
            usage: GAUGE
            description: unix timestamp when postmaster boot
        - lsn:
            name: lsn
            usage: COUNTER
            description: log sequence number, current write location
        - insert_lsn:
            name: insert_lsn
            usage: COUNTER
            description: primary only, location of current wal inserting
        - write_lsn:
            name: write_lsn
            usage: COUNTER
            description: primary only, location of current wal writing
        - flush_lsn:
            name: flush_lsn
            usage: COUNTER
            description: primary only, location of current wal syncing
        - receive_lsn:
            name: receive_lsn
            usage: COUNTER
            description: replica only, location of wal synced to disk
        - replay_lsn:
            name: replay_lsn
            usage: COUNTER
            description: replica only, location of wal applied
        - conf_reload_time:
            name: conf_reload_time
            usage: GAUGE
            description: seconds since last configuration reload
        - last_replay_time:
            name: last_replay_time
            usage: GAUGE
            description: time when last transaction been replayed
        - lag:
            name: lag
            usage: GAUGE
            description: replica only, replication lag in seconds
        - is_in_recovery:
            name: is_in_recovery
            usage: GAUGE
            description: 1 if in recovery mode
        - is_wal_replay_paused:
            name: is_wal_replay_paused
            usage: GAUGE
            description: 1 if wal play paused

##
# SYNNOPSIS
#       pg_meta_*
#
# DESCRIPTION
#       PostgreSQL meta info
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90600 ~ 130000
#       Source     120-pg_meta.yml
#
# METRICS
#       cluster_id (LABEL)
#           cluster system identifier
#       cluster_name (LABEL)
#           cluster name
#       listen_port (LABEL)
#           listen port
#       data_dir (LABEL)
#           data directory path
#       conf_path (LABEL)
#           postgresql.conf path
#       hba_path (LABEL)
#           pg_hba.conf path
#       wal_level (LABEL)
#           wal level
#       version (LABEL)
#           server version in human readable format
#       ver_num (LABEL)
#           server version number in machine readable format
#       extensions (LABEL)
#           server installed preload libraries
#       primary_conninfo (LABEL)
#           connection string to upstream (do not set password here)
#       info (GAUGE)
#           constant 1
#
pg_meta:
    name: pg_meta
    desc: PostgreSQL meta info
    query: |
        SELECT (SELECT system_identifier FROM pg_control_system()) AS cluster_id,
               current_setting('cluster_name')                     AS cluster_name,
               current_setting('port')                             AS listen_port,
               current_setting('data_directory')                   AS data_dir,
               current_setting('config_file')                      AS conf_path,
               current_setting('hba_file')                         AS hba_path,
               current_setting('wal_level')                        AS wal_level,
               current_setting('server_version')                   AS version,
               current_setting('server_version_num')               AS ver_num,
               current_setting('shared_preload_libraries')         AS extensions,
               'N/A'                                               AS primary_conninfo,
               1                                                   AS info
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 90600
    max_version: 130000
    fatal: false
    skip: false
    metrics:
        - cluster_id:
            name: cluster_id
            usage: LABEL
            description: cluster system identifier
        - cluster_name:
            name: cluster_name
            usage: LABEL
            description: cluster name
        - listen_port:
            name: listen_port
            usage: LABEL
            description: listen port
        - data_dir:
            name: data_dir
            usage: LABEL
            description: data directory path
        - conf_path:
            name: conf_path
            usage: LABEL
            description: postgresql.conf path
        - hba_path:
            name: hba_path
            usage: LABEL
            description: pg_hba.conf path
        - wal_level:
            name: wal_level
            usage: LABEL
            description: wal level
        - version:
            name: version
            usage: LABEL
            description: server version in human readable format
        - ver_num:
            name: ver_num
            usage: LABEL
            description: server version number in machine readable format
        - extensions:
            name: extensions
            usage: LABEL
            description: server installed preload libraries
        - primary_conninfo:
            name: primary_conninfo
            usage: LABEL
            description: connection string to upstream (do not set password here)
        - info:
            name: info
            usage: GAUGE
            description: constant 1

##
# SYNNOPSIS
#       pg_meta.pg_meta_13_*
#
# DESCRIPTION
#       PostgreSQL meta info for pg 13, with extra primary conninfo
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    130000 ~ higher
#       Source     120-pg_meta.yml
#
# METRICS
#       cluster_id (LABEL)
#           cluster system identifier
#       cluster_name (LABEL)
#           cluster name
#       listen_port (LABEL)
#           listen port
#       data_dir (LABEL)
#           data directory path
#       conf_path (LABEL)
#           postgresql.conf path
#       hba_path (LABEL)
#           pg_hba.conf path
#       wal_level (LABEL)
#           wal level
#       version (LABEL)
#           server version in human readable format
#       ver_num (LABEL)
#           server version number in machine readable format
#       extensions (LABEL)
#           server installed preload libraries
#       primary_conninfo (LABEL)
#           connection string to upstream (do not set password here)
#       info (GAUGE)
#           constant 1
#
pg_meta_13:
    name: pg_meta
    desc: PostgreSQL meta info for pg 13, with extra primary conninfo
    query: |
        SELECT (SELECT system_identifier FROM pg_control_system()) AS cluster_id,
               current_setting('cluster_name')                     AS cluster_name,
               current_setting('port')                             AS listen_port,
               current_setting('data_directory')                   AS data_dir,
               current_setting('config_file')                      AS conf_path,
               current_setting('hba_file')                         AS hba_path,
               current_setting('wal_level')                        AS wal_level,
               current_setting('server_version')                   AS version,
               current_setting('server_version_num')               AS ver_num,
               current_setting('shared_preload_libraries')         AS extensions,
               current_setting('primary_conninfo')                 AS primary_conninfo,
               1                                                   AS info
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 130000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - cluster_id:
            name: cluster_id
            usage: LABEL
            description: cluster system identifier
        - cluster_name:
            name: cluster_name
            usage: LABEL
            description: cluster name
        - listen_port:
            name: listen_port
            usage: LABEL
            description: listen port
        - data_dir:
            name: data_dir
            usage: LABEL
            description: data directory path
        - conf_path:
            name: conf_path
            usage: LABEL
            description: postgresql.conf path
        - hba_path:
            name: hba_path
            usage: LABEL
            description: pg_hba.conf path
        - wal_level:
            name: wal_level
            usage: LABEL
            description: wal level
        - version:
            name: version
            usage: LABEL
            description: server version in human readable format
        - ver_num:
            name: ver_num
            usage: LABEL
            description: server version number in machine readable format
        - extensions:
            name: extensions
            usage: LABEL
            description: server installed preload libraries
        - primary_conninfo:
            name: primary_conninfo
            usage: LABEL
            description: connection string to upstream (do not set password here)
        - info:
            name: info
            usage: GAUGE
            description: constant 1


##
# SYNNOPSIS
#       pg_setting_*
#
# DESCRIPTION
#       Important postgres setting entries that must kept same on entire cluster
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90600 ~ higher
#       Source     130-pg_setting.yml
#
# METRICS
#       max_connections (GAUGE)
#           number of concurrent connections to the database server
#       max_prepared_transactions (GAUGE)
#           maximum number of transactions that can be in the prepared state simultaneously
#       max_worker_processes (GAUGE)
#           maximum number of background processes that the system can support
#       max_replication_slots (GAUGE)
#           maximum number of replication slots
#       max_wal_senders (GAUGE)
#           maximum number of concurrent connections from standby servers
#       max_locks_per_transaction (GAUGE)
#           no more than this many distinct objects can be locked at any one time
#       block_size (GAUGE)
#           pg page block size, 8192 by default
#       data_checksums (GAUGE)
#           whether data checksum is enabled, 1 enabled 0 disabled
#       wal_log_hints (GAUGE)
#           whether wal_log_hints is enabled, 1 enabled 0 disabled
#
pg_setting:
    name: pg_setting
    desc: Important postgres setting entries that must kept same on entire cluster
    query: |
        SELECT current_setting('max_connections')           AS max_connections,
               current_setting('max_prepared_transactions') AS max_prepared_transactions,
               current_setting('max_worker_processes')      AS max_worker_processes,
               current_setting('max_replication_slots')     AS max_replication_slots,
               current_setting('max_wal_senders')           AS max_wal_senders,
               current_setting('max_locks_per_transaction') AS max_locks_per_transaction,
               current_setting('block_size')                AS block_size,
               CASE current_setting('data_checksums') WHEN 'on' THEN 1 ELSE 0 END AS data_checksums,
               CASE current_setting('wal_log_hints') WHEN 'on' THEN 1 ELSE 0 END AS wal_log_hints;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 90600
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - max_connections:
            name: max_connections
            usage: GAUGE
            description: number of concurrent connections to the database server
        - max_prepared_transactions:
            name: max_prepared_transactions
            usage: GAUGE
            description: maximum number of transactions that can be in the prepared state simultaneously
        - max_worker_processes:
            name: max_worker_processes
            usage: GAUGE
            description: maximum number of background processes that the system can support
        - max_replication_slots:
            name: max_replication_slots
            usage: GAUGE
            description: maximum number of replication slots
        - max_wal_senders:
            name: max_wal_senders
            usage: GAUGE
            description: maximum number of concurrent connections from standby servers
        - max_locks_per_transaction:
            name: max_locks_per_transaction
            usage: GAUGE
            description: no more than this many distinct objects can be locked at any one time
        - block_size:
            name: block_size
            usage: GAUGE
            description: pg page block size, 8192 by default
        - data_checksums:
            name: data_checksums
            usage: GAUGE
            description: whether data checksum is enabled, 1 enabled 0 disabled
        - wal_log_hints:
            name: wal_log_hints
            usage: GAUGE
            description: whether wal_log_hints is enabled, 1 enabled 0 disabled


##
# SYNNOPSIS
#       pg_repl.pg_repl_12_*
#
# DESCRIPTION
#       PostgreSQL replication stat metrics 12+
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    120000 ~ higher
#       Source     210-pg_repl.yml
#
# METRICS
#       appname (LABEL)
#           Name of the application that is connected to this WAL sender
#       usename (LABEL)
#           Name of the user logged into this WAL sender process
#       address (LABEL)
#           IP address of the client connected to this WAL sender, localhost for unix socket
#       pid (LABEL)
#           Process ID of the WAL sender process
#       client_port (GAUGE)
#           TCP port number that the client is using for communication with this WAL sender, or -1 if a Unix socket is used
#       state (GAUGE)
#           Current WAL sender encoded state 0-4 for streaming|startup|catchup|backup|stopping
#       sync_state (GAUGE)
#           Encoded synchronous state of this standby server, 0-3 for async|potential|sync|quorum
#       sync_priority (GAUGE)
#           Priority of this standby server for being chosen as the synchronous standby
#       backend_xmin (COUNTER)
#           This standby's xmin horizon reported by hot_standby_feedback.
#       lsn (COUNTER)
#           Current log position on this server
#       sent_diff (GAUGE)
#           Last log position sent to this standby server diff with current lsn
#       write_diff (GAUGE)
#           Last log position written to disk by this standby server diff with current lsn
#       flush_diff (GAUGE)
#           Last log position flushed to disk by this standby server diff with current lsn
#       replay_diff (GAUGE)
#           Last log position replayed into the database on this standby server diff with current lsn
#       sent_lsn (COUNTER)
#           Last write-ahead log location sent on this connection
#       write_lsn (COUNTER)
#           Last write-ahead log location written to disk by this standby server
#       flush_lsn (COUNTER)
#           Last write-ahead log location flushed to disk by this standby server
#       replay_lsn (COUNTER)
#           Last write-ahead log location replayed into the database on this standby server
#       write_lag (GAUGE)
#           Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written it
#       flush_lag (GAUGE)
#           Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written and flushed it
#       replay_lag (GAUGE)
#           Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written, flushed and applied it
#       time (COUNTER)
#           Current timestamp in unix epoch
#       launch_time (COUNTER)
#           Time when this process was started, i.e., when the client connected to this WAL sender
#       reply_time (GAUGE)
#           Send time of last reply message received from standby server
#
pg_repl_12:
    name: pg_repl
    desc: PostgreSQL replication stat metrics 12+
    query: |
        SELECT application_name AS appname, usename, coalesce(client_addr::TEXT,'localhost') AS address, pid::TEXT, client_port,
               CASE state WHEN 'streaming' THEN 0 WHEN 'startup' THEN 1 WHEN 'catchup' THEN 2 WHEN 'backup' THEN 3 WHEN 'stopping' THEN 4 ELSE -1 END AS state,
               CASE sync_state WHEN 'async' THEN 0 WHEN 'potential' THEN 1 WHEN 'sync' THEN 2 WHEN 'quorum' THEN 3 ELSE -1 END AS sync_state,
               sync_priority, backend_xmin::TEXT::BIGINT AS backend_xmin, current.lsn - '0/0' AS lsn,
               current.lsn - sent_lsn AS sent_diff, current.lsn - write_lsn AS write_diff, current.lsn - flush_lsn AS flush_diff, current.lsn - replay_lsn AS replay_diff,
               sent_lsn - '0/0' AS sent_lsn, write_lsn - '0/0' AS write_lsn, flush_lsn - '0/0' AS flush_lsn, replay_lsn - '0/0' AS replay_lsn,
               coalesce(extract(EPOCH FROM write_lag), 0)  AS write_lag, coalesce(extract(EPOCH FROM flush_lag), 0)  AS flush_lag, coalesce(extract(EPOCH FROM replay_lag), 0) AS replay_lag,
               extract(EPOCH FROM current_timestamp) AS "time", extract(EPOCH FROM backend_start) AS launch_time, extract(EPOCH FROM reply_time) AS reply_time
        FROM pg_stat_replication, (SELECT CASE WHEN pg_is_in_recovery() THEN pg_last_wal_replay_lsn() ELSE pg_current_wal_lsn() END AS lsn) current;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 120000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - appname:
            name: appname
            usage: LABEL
            description: Name of the application that is connected to this WAL sender
        - usename:
            name: usename
            usage: LABEL
            description: Name of the user logged into this WAL sender process
        - address:
            name: address
            usage: LABEL
            description: IP address of the client connected to this WAL sender, localhost for unix socket
        - pid:
            name: pid
            usage: LABEL
            description: Process ID of the WAL sender process
        - client_port:
            name: client_port
            usage: GAUGE
            description: TCP port number that the client is using for communication with this WAL sender, or -1 if a Unix socket is used
        - state:
            name: state
            usage: GAUGE
            description: Current WAL sender encoded state 0-4 for streaming|startup|catchup|backup|stopping
        - sync_state:
            name: sync_state
            usage: GAUGE
            description: Encoded synchronous state of this standby server, 0-3 for async|potential|sync|quorum
        - sync_priority:
            name: sync_priority
            usage: GAUGE
            description: Priority of this standby server for being chosen as the synchronous standby
        - backend_xmin:
            name: backend_xmin
            usage: COUNTER
            description: This standby's xmin horizon reported by hot_standby_feedback.
        - lsn:
            name: lsn
            usage: COUNTER
            description: Current log position on this server
        - sent_diff:
            name: sent_diff
            usage: GAUGE
            description: Last log position sent to this standby server diff with current lsn
        - write_diff:
            name: write_diff
            usage: GAUGE
            description: Last log position written to disk by this standby server diff with current lsn
        - flush_diff:
            name: flush_diff
            usage: GAUGE
            description: Last log position flushed to disk by this standby server diff with current lsn
        - replay_diff:
            name: replay_diff
            usage: GAUGE
            description: Last log position replayed into the database on this standby server diff with current lsn
        - sent_lsn:
            name: sent_lsn
            usage: COUNTER
            description: Last write-ahead log location sent on this connection
        - write_lsn:
            name: write_lsn
            usage: COUNTER
            description: Last write-ahead log location written to disk by this standby server
        - flush_lsn:
            name: flush_lsn
            usage: COUNTER
            description: Last write-ahead log location flushed to disk by this standby server
        - replay_lsn:
            name: replay_lsn
            usage: COUNTER
            description: Last write-ahead log location replayed into the database on this standby server
        - write_lag:
            name: write_lag
            usage: GAUGE
            description: Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written it
        - flush_lag:
            name: flush_lag
            usage: GAUGE
            description: Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written and flushed it
        - replay_lag:
            name: replay_lag
            usage: GAUGE
            description: Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written, flushed and applied it
        - time:
            name: time
            usage: COUNTER
            description: Current timestamp in unix epoch
        - launch_time:
            name: launch_time
            usage: COUNTER
            description: Time when this process was started, i.e., when the client connected to this WAL sender
        - reply_time:
            name: reply_time
            usage: GAUGE
            description: Send time of last reply message received from standby server

##
# SYNNOPSIS
#       pg_repl.pg_repl_10_11_*
#
# DESCRIPTION
#       PostgreSQL replication stat metrics v10 v11
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    100000 ~ 120000
#       Source     210-pg_repl.yml
#
# METRICS
#       appname (LABEL)
#           Name of the application that is connected to this WAL sender
#       usename (LABEL)
#           Name of the user logged into this WAL sender process
#       address (LABEL)
#           IP address of the client connected to this WAL sender, localhost for unix socket
#       pid (LABEL)
#           Process ID of the WAL sender process
#       client_port (GAUGE)
#           TCP port number that the client is using for communication with this WAL sender, or -1 if a Unix socket is used
#       state (GAUGE)
#           Current WAL sender encoded state 0-4 for streaming|startup|catchup|backup|stopping
#       sync_state (GAUGE)
#           Encoded synchronous state of this standby server, 0-3 for async|potential|sync|quorum
#       sync_priority (GAUGE)
#           Priority of this standby server for being chosen as the synchronous standby
#       backend_xmin (COUNTER)
#           This standby's xmin horizon reported by hot_standby_feedback.
#       lsn (COUNTER)
#           Current log position on this server
#       sent_diff (GAUGE)
#           Last log position sent to this standby server diff with current lsn
#       write_diff (GAUGE)
#           Last log position written to disk by this standby server diff with current lsn
#       flush_diff (GAUGE)
#           Last log position flushed to disk by this standby server diff with current lsn
#       replay_diff (GAUGE)
#           Last log position replayed into the database on this standby server diff with current lsn
#       sent_lsn (COUNTER)
#           Last write-ahead log location sent on this connection
#       write_lsn (COUNTER)
#           Last write-ahead log location written to disk by this standby server
#       flush_lsn (COUNTER)
#           Last write-ahead log location flushed to disk by this standby server
#       replay_lsn (COUNTER)
#           Last write-ahead log location replayed into the database on this standby server
#       write_lag (GAUGE)
#           Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written it
#       flush_lag (GAUGE)
#           Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written and flushed it
#       replay_lag (GAUGE)
#           Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written, flushed and applied it
#       time (COUNTER)
#           Current timestamp in unix epoch
#       launch_time (COUNTER)
#           Time when this process was started, i.e., when the client connected to this WAL sender
#
pg_repl_10_11:
    name: pg_repl
    desc: PostgreSQL replication stat metrics v10 v11
    query: |
        SELECT application_name AS appname, usename, coalesce(client_addr::TEXT,'localhost') AS address, pid::TEXT, client_port,
               CASE state WHEN 'streaming' THEN 0 WHEN 'startup' THEN 1 WHEN 'catchup' THEN 2 WHEN 'backup' THEN 3 WHEN 'stopping' THEN 4 ELSE -1 END AS state,
               CASE sync_state WHEN 'async' THEN 0 WHEN 'potential' THEN 1 WHEN 'sync' THEN 2 WHEN 'quorum' THEN 3 ELSE -1 END AS sync_state,
               sync_priority, backend_xmin::TEXT::BIGINT AS backend_xmin, current.lsn - '0/0' AS lsn,
               current.lsn - sent_lsn AS sent_diff, current.lsn - write_lsn AS write_diff, current.lsn - flush_lsn AS flush_diff, current.lsn - replay_lsn AS replay_diff,
               sent_lsn - '0/0' AS sent_lsn, write_lsn - '0/0' AS write_lsn, flush_lsn - '0/0' AS flush_lsn, replay_lsn - '0/0' AS replay_lsn,
               coalesce(extract(EPOCH FROM write_lag), 0)  AS write_lag, coalesce(extract(EPOCH FROM flush_lag), 0)  AS flush_lag, coalesce(extract(EPOCH FROM replay_lag), 0) AS replay_lag,
               extract(EPOCH FROM current_timestamp) AS "time", extract(EPOCH FROM backend_start) AS launch_time
        FROM pg_stat_replication, (SELECT CASE WHEN pg_is_in_recovery() THEN pg_last_wal_replay_lsn() ELSE pg_current_wal_lsn() END AS lsn) current;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 100000
    max_version: 120000
    fatal: false
    skip: false
    metrics:
        - appname:
            name: appname
            usage: LABEL
            description: Name of the application that is connected to this WAL sender
        - usename:
            name: usename
            usage: LABEL
            description: Name of the user logged into this WAL sender process
        - address:
            name: address
            usage: LABEL
            description: IP address of the client connected to this WAL sender, localhost for unix socket
        - pid:
            name: pid
            usage: LABEL
            description: Process ID of the WAL sender process
        - client_port:
            name: client_port
            usage: GAUGE
            description: TCP port number that the client is using for communication with this WAL sender, or -1 if a Unix socket is used
        - state:
            name: state
            usage: GAUGE
            description: Current WAL sender encoded state 0-4 for streaming|startup|catchup|backup|stopping
        - sync_state:
            name: sync_state
            usage: GAUGE
            description: Encoded synchronous state of this standby server, 0-3 for async|potential|sync|quorum
        - sync_priority:
            name: sync_priority
            usage: GAUGE
            description: Priority of this standby server for being chosen as the synchronous standby
        - backend_xmin:
            name: backend_xmin
            usage: COUNTER
            description: This standby's xmin horizon reported by hot_standby_feedback.
        - lsn:
            name: lsn
            usage: COUNTER
            description: Current log position on this server
        - sent_diff:
            name: sent_diff
            usage: GAUGE
            description: Last log position sent to this standby server diff with current lsn
        - write_diff:
            name: write_diff
            usage: GAUGE
            description: Last log position written to disk by this standby server diff with current lsn
        - flush_diff:
            name: flush_diff
            usage: GAUGE
            description: Last log position flushed to disk by this standby server diff with current lsn
        - replay_diff:
            name: replay_diff
            usage: GAUGE
            description: Last log position replayed into the database on this standby server diff with current lsn
        - sent_lsn:
            name: sent_lsn
            usage: COUNTER
            description: Last write-ahead log location sent on this connection
        - write_lsn:
            name: write_lsn
            usage: COUNTER
            description: Last write-ahead log location written to disk by this standby server
        - flush_lsn:
            name: flush_lsn
            usage: COUNTER
            description: Last write-ahead log location flushed to disk by this standby server
        - replay_lsn:
            name: replay_lsn
            usage: COUNTER
            description: Last write-ahead log location replayed into the database on this standby server
        - write_lag:
            name: write_lag
            usage: GAUGE
            description: Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written it
        - flush_lag:
            name: flush_lag
            usage: GAUGE
            description: Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written and flushed it
        - replay_lag:
            name: replay_lag
            usage: GAUGE
            description: Time elapsed between flushing recent WAL locally and receiving notification that this standby server has written, flushed and applied it
        - time:
            name: time
            usage: COUNTER
            description: Current timestamp in unix epoch
        - launch_time:
            name: launch_time
            usage: COUNTER
            description: Time when this process was started, i.e., when the client connected to this WAL sender


##
# SYNNOPSIS
#       pg_sync_standby_*
#
# DESCRIPTION
#       PostgreSQL synchronous standby status and names
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90400 ~ higher
#       Source     220-pg_sync_standby.yml
#
# METRICS
#       names (LABEL)
#           List of standby servers that can support synchronous replication, <null> if not enabled
#       enabled (GAUGE)
#           Synchronous commit enabled, 1 if enabled, 0 if disabled
#
pg_sync_standby:
    name: pg_sync_standby
    desc: PostgreSQL synchronous standby status and names
    query: |
        SELECT CASE WHEN names <> '' THEN names ELSE '<null>' END AS names, CASE WHEN names <> '' THEN 1 ELSE 0 END AS enabled FROM (SELECT current_setting('synchronous_standby_names') AS names) n;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 90400
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - names:
            name: names
            usage: LABEL
            description: List of standby servers that can support synchronous replication, <null> if not enabled
        - enabled:
            name: enabled
            usage: GAUGE
            description: Synchronous commit enabled, 1 if enabled, 0 if disabled


##
# SYNNOPSIS
#       pg_downstream_*
#
# DESCRIPTION
#       PostgreSQL replication client count group by state
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90400 ~ higher
#       Source     230-pg_downstrem.yml
#
# METRICS
#       state (LABEL)
#           Replication client state, could be one of startup|catchup|streaming|backup|stopping
#       count (GAUGE)
#           Count of corresponding state
#
pg_downstream:
    name: pg_downstream
    desc: PostgreSQL replication client count group by state
    query: |
        SELECT l.state, coalesce(count, 0 ) AS count FROM unnest(ARRAY ['streaming','startup','catchup', 'backup', 'stopping']) l(state) LEFT JOIN (SELECT state, count(*) AS count FROM pg_stat_replication GROUP BY state)r ON l.state =  r.state;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 90400
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - state:
            name: state
            usage: LABEL
            description: Replication client state, could be one of startup|catchup|streaming|backup|stopping
        - count:
            name: count
            usage: GAUGE
            description: Count of corresponding state


##
# SYNNOPSIS
#       pg_slot.pg_slot_14_*
#
# DESCRIPTION
#       PostgreSQL replication slot metrics v14 with wal safe size and status
#
# OPTIONS
#       Tags       [cluster, primary]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    140000 ~ higher
#       Source     240-pg_slot.yml
#
# METRICS
#       slot_name (LABEL)
#           A unique, cluster-wide identifier for the replication slot
#       datname (LABEL)
#           The name of the database this slot is associated with, or null for physical slot.
#       active (GAUGE)
#           True(1) if this slot is currently actively being used
#       temporary (GAUGE)
#           True(1) if this is a temporary replication slot.
#       xmin (COUNTER)
#           The oldest transaction that this slot needs the database to retain.
#       catalog_xmin (COUNTER)
#           The oldest transaction affecting the system catalogs that this slot needs the database to retain.
#       restart_lsn (COUNTER)
#           The address (LSN) of oldest WAL which still might be required by the consumer of this slot
#       confirm_lsn (COUNTER)
#           The address (LSN) up to which the logical slot's consumer has confirmed receiving data.
#       retained_bytes (GAUGE)
#           Size of bytes that retained for this slot
#       safe_wal_size (GAUGE)
#           bytes that can be written to WAL which will not make slot into lost
#       wal_status (GAUGE)
#           WAL reserve status 0-3 means reserved,extended,unreserved,lost, -1 means other
#       spill_txns (COUNTER)
#           Xacts that spilled to disk due to logical decode mem exceeding (subtrans included)
#       spill_count (COUNTER)
#           Xacts that spilled to disk due to logical decode mem exceeding (a xact can be spilled multiple times)
#       spill_bytes (COUNTER)
#           Bytes that spilled to disk due to logical decode mem exceeding
#       stream_txns (COUNTER)
#           Xacts that streamed to decoding output plugin after mem exceed
#       stream_count (COUNTER)
#           Xacts that streamed to decoding output plugin after mem exceed  (a xact can be streamed multiple times)
#       stream_bytes (COUNTER)
#           Bytes that streamed to decoding output plugin after mem exceed
#       total_txns (COUNTER)
#           Number of decoded xacts sent to the decoding output plugin for this slot
#       total_bytes (COUNTER)
#           Number of decoded bytes sent to the decoding output plugin for this slot
#       reset_time (COUNTER)
#           When statistics were last reset
#
pg_slot_14:
    name: pg_slot
    desc: PostgreSQL replication slot metrics v14 with wal safe size and status
    query: |
        SELECT s.slot_name, database AS datname,active,temporary,xmin::TEXT::BIGINT AS xmin,catalog_xmin::TEXT::BIGINT  AS catalog_xmin,
          restart_lsn - '0/0' AS restart_lsn, confirmed_flush_lsn - '0/0' AS confirm_lsn,
          CASE WHEN pg_is_in_recovery() THEN pg_last_wal_replay_lsn() ELSE pg_current_wal_lsn() END - restart_lsn AS retained_bytes,
          safe_wal_size, CASE wal_status WHEN 'reserved' THEN 0 WHEN 'extended' THEN 1 WHEN 'unreserved' THEN 2 WHEN 'lost' THEN 3 ELSE -1 END AS wal_status,
          spill_txns,spill_count,spill_bytes,stream_txns,stream_count,stream_bytes,total_txns,total_bytes,extract(EPOCH FROM now() - stats_reset) AS reset_time
        FROM pg_replication_slots s LEFT OUTER JOIN pg_stat_replication_slots ss ON s.slot_name = ss.slot_name;
    tags:
        - cluster
        - primary
    ttl: 10
    timeout: 0.1
    min_version: 140000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - slot_name:
            name: slot_name
            usage: LABEL
            description: A unique, cluster-wide identifier for the replication slot
        - datname:
            name: datname
            usage: LABEL
            description: The name of the database this slot is associated with, or null for physical slot.
        - active:
            name: active
            usage: GAUGE
            description: True(1) if this slot is currently actively being used
        - temporary:
            name: temporary
            usage: GAUGE
            description: True(1) if this is a temporary replication slot.
        - xmin:
            name: xmin
            usage: COUNTER
            description: The oldest transaction that this slot needs the database to retain.
        - catalog_xmin:
            name: catalog_xmin
            usage: COUNTER
            description: The oldest transaction affecting the system catalogs that this slot needs the database to retain.
        - restart_lsn:
            name: restart_lsn
            usage: COUNTER
            description: The address (LSN) of oldest WAL which still might be required by the consumer of this slot
        - confirm_lsn:
            name: confirm_lsn
            usage: COUNTER
            description: The address (LSN) up to which the logical slot's consumer has confirmed receiving data.
        - retained_bytes:
            name: retained_bytes
            usage: GAUGE
            description: Size of bytes that retained for this slot
        - safe_wal_size:
            name: safe_wal_size
            usage: GAUGE
            description: bytes that can be written to WAL which will not make slot into lost
        - wal_status:
            name: wal_status
            usage: GAUGE
            description: WAL reserve status 0-3 means reserved,extended,unreserved,lost, -1 means other
        - spill_txns:
            name: spill_txns
            usage: COUNTER
            description: Xacts that spilled to disk due to logical decode mem exceeding (subtrans included)
        - spill_count:
            name: spill_count
            usage: COUNTER
            description: Xacts that spilled to disk due to logical decode mem exceeding (a xact can be spilled multiple times)
        - spill_bytes:
            name: spill_bytes
            usage: COUNTER
            description: Bytes that spilled to disk due to logical decode mem exceeding
        - stream_txns:
            name: stream_txns
            usage: COUNTER
            description: Xacts that streamed to decoding output plugin after mem exceed
        - stream_count:
            name: stream_count
            usage: COUNTER
            description: Xacts that streamed to decoding output plugin after mem exceed  (a xact can be streamed multiple times)
        - stream_bytes:
            name: stream_bytes
            usage: COUNTER
            description: Bytes that streamed to decoding output plugin after mem exceed
        - total_txns:
            name: total_txns
            usage: COUNTER
            description: Number of decoded xacts sent to the decoding output plugin for this slot
        - total_bytes:
            name: total_bytes
            usage: COUNTER
            description: Number of decoded bytes sent to the decoding output plugin for this slot
        - reset_time:
            name: reset_time
            usage: COUNTER
            description: When statistics were last reset

##
# SYNNOPSIS
#       pg_slot.pg_slot_13_*
#
# DESCRIPTION
#       PostgreSQL replication slot metrics v13 (wal safe size and status)
#
# OPTIONS
#       Tags       [cluster, primary]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    130000 ~ 140000
#       Source     240-pg_slot.yml
#
# METRICS
#       slot_name (LABEL)
#           A unique, cluster-wide identifier for the replication slot
#       datname (LABEL)
#           The name of the database this slot is associated with, or null for physical slot.
#       active (GAUGE)
#           True(1) if this slot is currently actively being used
#       temporary (GAUGE)
#           True(1) if this is a temporary replication slot.
#       xmin (COUNTER)
#           The oldest transaction that this slot needs the database to retain.
#       catalog_xmin (COUNTER)
#           The oldest transaction affecting the system catalogs that this slot needs the database to retain.
#       restart_lsn (COUNTER)
#           The address (LSN) of oldest WAL which still might be required by the consumer of this slot
#       confirm_lsn (COUNTER)
#           The address (LSN) up to which the logical slot's consumer has confirmed receiving data.
#       retained_bytes (GAUGE)
#           Size of bytes that retained for this slot
#       safe_wal_size (GAUGE)
#           bytes that can be written to WAL which will not make slot into lost
#       wal_status (GAUGE)
#           WAL reserve status 0-3 means reserved,extended,unreserved,lost, -1 means other
#
pg_slot_13:
    name: pg_slot
    desc: PostgreSQL replication slot metrics v13 (wal safe size and status)
    query: |
        SELECT slot_name, database AS datname,active,temporary,xmin::TEXT::BIGINT AS xmin,catalog_xmin::TEXT::BIGINT  AS catalog_xmin,
            restart_lsn - '0/0' AS restart_lsn, confirmed_flush_lsn - '0/0' AS confirm_lsn,
            CASE WHEN pg_is_in_recovery() THEN pg_last_wal_replay_lsn() ELSE pg_current_wal_lsn() END - restart_lsn AS retained_bytes,
            safe_wal_size, CASE wal_status WHEN 'reserved' THEN 0 WHEN 'extended' THEN 1 WHEN 'unreserved' THEN 2 WHEN 'lost' THEN 3 ELSE -1 END AS wal_status
        FROM pg_replication_slots;
    tags:
        - cluster
        - primary
    ttl: 10
    timeout: 0.1
    min_version: 130000
    max_version: 140000
    fatal: false
    skip: false
    metrics:
        - slot_name:
            name: slot_name
            usage: LABEL
            description: A unique, cluster-wide identifier for the replication slot
        - datname:
            name: datname
            usage: LABEL
            description: The name of the database this slot is associated with, or null for physical slot.
        - active:
            name: active
            usage: GAUGE
            description: True(1) if this slot is currently actively being used
        - temporary:
            name: temporary
            usage: GAUGE
            description: True(1) if this is a temporary replication slot.
        - xmin:
            name: xmin
            usage: COUNTER
            description: The oldest transaction that this slot needs the database to retain.
        - catalog_xmin:
            name: catalog_xmin
            usage: COUNTER
            description: The oldest transaction affecting the system catalogs that this slot needs the database to retain.
        - restart_lsn:
            name: restart_lsn
            usage: COUNTER
            description: The address (LSN) of oldest WAL which still might be required by the consumer of this slot
        - confirm_lsn:
            name: confirm_lsn
            usage: COUNTER
            description: The address (LSN) up to which the logical slot's consumer has confirmed receiving data.
        - retained_bytes:
            name: retained_bytes
            usage: GAUGE
            description: Size of bytes that retained for this slot
        - safe_wal_size:
            name: safe_wal_size
            usage: GAUGE
            description: bytes that can be written to WAL which will not make slot into lost
        - wal_status:
            name: wal_status
            usage: GAUGE
            description: WAL reserve status 0-3 means reserved,extended,unreserved,lost, -1 means other

##
# SYNNOPSIS
#       pg_slot.pg_slot_10_12_*
#
# DESCRIPTION
#       PostgreSQL replication slot metrics v10 v11 v12
#
# OPTIONS
#       Tags       [cluster, primary]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    100000 ~ 130000
#       Source     240-pg_slot.yml
#
# METRICS
#       slot_name (LABEL)
#           A unique, cluster-wide identifier for the replication slot
#       datname (LABEL)
#           The name of the database this slot is associated with, or null for physical slot.
#       active (GAUGE)
#           True(1) if this slot is currently actively being used
#       temporary (GAUGE)
#           True(1) if this is a temporary replication slot.
#       xmin (COUNTER)
#           The oldest transaction that this slot needs the database to retain.
#       catalog_xmin (COUNTER)
#           The oldest transaction affecting the system catalogs that this slot needs the database to retain.
#       restart_lsn (COUNTER)
#           The address (LSN) of oldest WAL which still might be required by the consumer of this slot
#       confirm_lsn (COUNTER)
#           The address (LSN) up to which the logical slot's consumer has confirmed receiving data.
#       retained_bytes (GAUGE)
#           Size of bytes that retained for this slot
#
pg_slot_10_12:
    name: pg_slot
    desc: PostgreSQL replication slot metrics v10 v11 v12
    query: |
        SELECT slot_name, database AS datname,active,temporary,xmin::TEXT::BIGINT AS xmin,catalog_xmin::TEXT::BIGINT  AS catalog_xmin,
               restart_lsn - '0/0' AS restart_lsn, confirmed_flush_lsn - '0/0' AS confirm_lsn,
               CASE WHEN pg_is_in_recovery() THEN pg_last_wal_replay_lsn() ELSE pg_current_wal_lsn() END - restart_lsn AS retained_bytes
        FROM pg_replication_slots;
    tags:
        - cluster
        - primary
    ttl: 10
    timeout: 0.1
    min_version: 100000
    max_version: 130000
    fatal: false
    skip: false
    metrics:
        - slot_name:
            name: slot_name
            usage: LABEL
            description: A unique, cluster-wide identifier for the replication slot
        - datname:
            name: datname
            usage: LABEL
            description: The name of the database this slot is associated with, or null for physical slot.
        - active:
            name: active
            usage: GAUGE
            description: True(1) if this slot is currently actively being used
        - temporary:
            name: temporary
            usage: GAUGE
            description: True(1) if this is a temporary replication slot.
        - xmin:
            name: xmin
            usage: COUNTER
            description: The oldest transaction that this slot needs the database to retain.
        - catalog_xmin:
            name: catalog_xmin
            usage: COUNTER
            description: The oldest transaction affecting the system catalogs that this slot needs the database to retain.
        - restart_lsn:
            name: restart_lsn
            usage: COUNTER
            description: The address (LSN) of oldest WAL which still might be required by the consumer of this slot
        - confirm_lsn:
            name: confirm_lsn
            usage: COUNTER
            description: The address (LSN) up to which the logical slot's consumer has confirmed receiving data.
        - retained_bytes:
            name: retained_bytes
            usage: GAUGE
            description: Size of bytes that retained for this slot


##
# SYNNOPSIS
#       pg_recv.pg_recv_13_*
#
# DESCRIPTION
#       PostgreSQL walreceiver metrics 13+ (add written and flush lsn)
#
# OPTIONS
#       Tags       [cluster, replica]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    130000 ~ higher
#       Source     250-pg_recv.yml
#
# METRICS
#       sender_host (LABEL)
#           Host of the PostgreSQL instance this WAL receiver is connected to
#       sender_port (LABEL)
#           Port number of the PostgreSQL instance this WAL receiver is connected to.
#       slot_name (LABEL)
#           Replication slot name used by this WAL receiver
#       pid (GAUGE)
#           Process ID of the WAL receiver process
#       state (LABEL)
#           Encoded activity status of the WAL receiver process 0-4 for streaming|startup|catchup|backup|stopping
#       init_lsn (COUNTER)
#           First write-ahead log location used when WAL receiver is started
#       init_tli (COUNTER)
#           First timeline number used when WAL receiver is started
#       flush_lsn (COUNTER)
#           Last write-ahead log location already received and flushed to disk
#       write_lsn (COUNTER)
#           Last write-ahead log location already received and written to disk, but not flushed.
#       flush_tli (COUNTER)
#           Timeline number of last write-ahead log location received and flushed to disk
#       reported_lsn (COUNTER)
#           Last write-ahead log location reported to origin WAL sender
#       msg_send_time (GAUGE)
#           Send time of last message received from origin WAL sender
#       msg_recv_time (GAUGE)
#           Receipt time of last message received from origin WAL sender
#       reported_time (GAUGE)
#           Time of last write-ahead log location reported to origin WAL sender
#       time (GAUGE)
#           Time of current snapshot
#
pg_recv_13:
    name: pg_recv
    desc: PostgreSQL walreceiver metrics 13+ (add written and flush lsn)
    query: |
        SELECT coalesce(sender_host, (regexp_match(conninfo, '.*host=(\S+).*'))[1]) AS sender_host, coalesce(sender_port::TEXT, (regexp_match(conninfo, '.*port=(\S+).*'))[1]) AS sender_port, slot_name,
               pid, CASE status WHEN 'streaming' THEN 0 WHEN 'startup' THEN 1 WHEN 'catchup' THEN 2 WHEN 'backup' THEN 3 WHEN 'stopping' THEN 4 ELSE -1 END AS state,
               receive_start_lsn - '0/0' AS init_lsn,receive_start_tli AS init_tli,
               flushed_lsn - '0/0' AS flush_lsn,written_lsn - '0/0'AS write_lsn, received_tli AS flush_tli, latest_end_lsn - '0/0' AS reported_lsn,
               last_msg_send_time AS msg_send_time,last_msg_receipt_time AS msg_recv_time,latest_end_time AS reported_time,now() AS time FROM pg_stat_wal_receiver;
    tags:
        - cluster
        - replica
    ttl: 10
    timeout: 0.1
    min_version: 130000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - sender_host:
            name: sender_host
            usage: LABEL
            description: Host of the PostgreSQL instance this WAL receiver is connected to
        - sender_port:
            name: sender_port
            usage: LABEL
            description: Port number of the PostgreSQL instance this WAL receiver is connected to.
        - slot_name:
            name: slot_name
            usage: LABEL
            description: Replication slot name used by this WAL receiver
        - pid:
            name: pid
            usage: GAUGE
            description: Process ID of the WAL receiver process
        - state:
            name: state
            usage: LABEL
            description: Encoded activity status of the WAL receiver process 0-4 for streaming|startup|catchup|backup|stopping
        - init_lsn:
            name: init_lsn
            usage: COUNTER
            description: First write-ahead log location used when WAL receiver is started
        - init_tli:
            name: init_tli
            usage: COUNTER
            description: First timeline number used when WAL receiver is started
        - flush_lsn:
            name: flush_lsn
            usage: COUNTER
            description: Last write-ahead log location already received and flushed to disk
        - write_lsn:
            name: write_lsn
            usage: COUNTER
            description: Last write-ahead log location already received and written to disk, but not flushed.
        - flush_tli:
            name: flush_tli
            usage: COUNTER
            description: Timeline number of last write-ahead log location received and flushed to disk
        - reported_lsn:
            name: reported_lsn
            usage: COUNTER
            description: Last write-ahead log location reported to origin WAL sender
        - msg_send_time:
            name: msg_send_time
            usage: GAUGE
            description: Send time of last message received from origin WAL sender
        - msg_recv_time:
            name: msg_recv_time
            usage: GAUGE
            description: Receipt time of last message received from origin WAL sender
        - reported_time:
            name: reported_time
            usage: GAUGE
            description: Time of last write-ahead log location reported to origin WAL sender
        - time:
            name: time
            usage: GAUGE
            description: Time of current snapshot

##
# SYNNOPSIS
#       pg_recv.pg_recv_11_*
#
# DESCRIPTION
#       PostgreSQL walreceiver metrics v11 v12 (add sender host and port)
#
# OPTIONS
#       Tags       [cluster, replica]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    110000 ~ 130000
#       Source     250-pg_recv.yml
#
# METRICS
#       sender_host (LABEL)
#           Host of the PostgreSQL instance this WAL receiver is connected to
#       sender_port (LABEL)
#           Port number of the PostgreSQL instance this WAL receiver is connected to.
#       slot_name (LABEL)
#           Replication slot name used by this WAL receiver
#       pid (GAUGE)
#           Process ID of the WAL receiver process
#       state (LABEL)
#           Encoded activity status of the WAL receiver process 0-4 for streaming|startup|catchup|backup|stopping
#       init_lsn (COUNTER)
#           First write-ahead log location used when WAL receiver is started
#       init_tli (COUNTER)
#           First timeline number used when WAL receiver is started
#       flush_lsn (COUNTER)
#           Last write-ahead log location already received and flushed to disk
#       flush_tli (COUNTER)
#           Timeline number of last write-ahead log location received and flushed to disk
#       reported_lsn (COUNTER)
#           Last write-ahead log location reported to origin WAL sender
#       msg_send_time (GAUGE)
#           Send time of last message received from origin WAL sender
#       msg_recv_time (GAUGE)
#           Receipt time of last message received from origin WAL sender
#       reported_time (GAUGE)
#           Time of last write-ahead log location reported to origin WAL sender
#       time (GAUGE)
#           Time of current snapshot
#
pg_recv_11:
    name: pg_recv
    desc: PostgreSQL walreceiver metrics v11 v12 (add sender host and port)
    query: |
        SELECT coalesce(sender_host, (regexp_match(conninfo, '.*host=(\S+).*'))[1]) AS sender_host, coalesce(sender_port::TEXT, (regexp_match(conninfo, '.*port=(\S+).*'))[1]) AS sender_port, slot_name,
               pid, CASE status WHEN 'streaming' THEN 0 WHEN 'startup' THEN 1 WHEN 'catchup' THEN 2 WHEN 'backup' THEN 3 WHEN 'stopping' THEN 4 ELSE -1 END AS state,
               receive_start_lsn - '0/0' AS init_lsn,receive_start_tli AS init_tli,
               received_lsn - '0/0' AS flush_lsn, received_tli AS flush_tli, latest_end_lsn - '0/0' AS reported_lsn,
               last_msg_send_time AS msg_send_time,last_msg_receipt_time AS msg_recv_time,latest_end_time AS reported_time,now() AS time FROM pg_stat_wal_receiver;
    tags:
        - cluster
        - replica
    ttl: 10
    timeout: 0.1
    min_version: 110000
    max_version: 130000
    fatal: false
    skip: false
    metrics:
        - sender_host:
            name: sender_host
            usage: LABEL
            description: Host of the PostgreSQL instance this WAL receiver is connected to
        - sender_port:
            name: sender_port
            usage: LABEL
            description: Port number of the PostgreSQL instance this WAL receiver is connected to.
        - slot_name:
            name: slot_name
            usage: LABEL
            description: Replication slot name used by this WAL receiver
        - pid:
            name: pid
            usage: GAUGE
            description: Process ID of the WAL receiver process
        - state:
            name: state
            usage: LABEL
            description: Encoded activity status of the WAL receiver process 0-4 for streaming|startup|catchup|backup|stopping
        - init_lsn:
            name: init_lsn
            usage: COUNTER
            description: First write-ahead log location used when WAL receiver is started
        - init_tli:
            name: init_tli
            usage: COUNTER
            description: First timeline number used when WAL receiver is started
        - flush_lsn:
            name: flush_lsn
            usage: COUNTER
            description: Last write-ahead log location already received and flushed to disk
        - flush_tli:
            name: flush_tli
            usage: COUNTER
            description: Timeline number of last write-ahead log location received and flushed to disk
        - reported_lsn:
            name: reported_lsn
            usage: COUNTER
            description: Last write-ahead log location reported to origin WAL sender
        - msg_send_time:
            name: msg_send_time
            usage: GAUGE
            description: Send time of last message received from origin WAL sender
        - msg_recv_time:
            name: msg_recv_time
            usage: GAUGE
            description: Receipt time of last message received from origin WAL sender
        - reported_time:
            name: reported_time
            usage: GAUGE
            description: Time of last write-ahead log location reported to origin WAL sender
        - time:
            name: time
            usage: GAUGE
            description: Time of current snapshot

##
# SYNNOPSIS
#       pg_recv.pg_recv_10_*
#
# DESCRIPTION
#       PostgreSQL walreceiver metrics v10 (v9.6)
#
# OPTIONS
#       Tags       [cluster, replica]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90600 ~ 110000
#       Source     250-pg_recv.yml
#
# METRICS
#       sender_host (LABEL)
#           Host of the PostgreSQL instance this WAL receiver is connected to
#       sender_port (LABEL)
#           Port number of the PostgreSQL instance this WAL receiver is connected to.
#       slot_name (LABEL)
#           Replication slot name used by this WAL receiver
#       pid (GAUGE)
#           Process ID of the WAL receiver process
#       state (LABEL)
#           Encoded activity status of the WAL receiver process 0-4 for streaming|startup|catchup|backup|stopping
#       init_lsn (COUNTER)
#           First write-ahead log location used when WAL receiver is started
#       init_tli (COUNTER)
#           First timeline number used when WAL receiver is started
#       flush_lsn (COUNTER)
#           Last write-ahead log location already received and flushed to disk
#       flush_tli (COUNTER)
#           Timeline number of last write-ahead log location received and flushed to disk
#       reported_lsn (COUNTER)
#           Last write-ahead log location reported to origin WAL sender
#       msg_send_time (GAUGE)
#           Send time of last message received from origin WAL sender
#       msg_recv_time (GAUGE)
#           Receipt time of last message received from origin WAL sender
#       reported_time (GAUGE)
#           Time of last write-ahead log location reported to origin WAL sender
#       time (GAUGE)
#           Time of current snapshot
#
pg_recv_10:
    name: pg_recv
    desc: PostgreSQL walreceiver metrics v10 (v9.6)
    query: |
        SELECT (regexp_match(conninfo, '.*host=(\S+).*'))[1] AS sender_host, (regexp_match(conninfo, '.*port=(\S+).*'))[1] AS sender_port, slot_name,
               pid, CASE status WHEN 'streaming' THEN 0 WHEN 'startup' THEN 1 WHEN 'catchup' THEN 2 WHEN 'backup' THEN 3 WHEN 'stopping' THEN 4 ELSE -1 END AS state,
               receive_start_lsn - '0/0' AS init_lsn,receive_start_tli AS init_tli,
               received_lsn - '0/0' AS flush_lsn, received_tli AS flush_tli, latest_end_lsn - '0/0' AS reported_lsn,
               last_msg_send_time AS msg_send_time,last_msg_receipt_time AS msg_recv_time,latest_end_time AS reported_time,now() AS time FROM pg_stat_wal_receiver;
    tags:
        - cluster
        - replica
    ttl: 10
    timeout: 0.1
    min_version: 90600
    max_version: 110000
    fatal: false
    skip: false
    metrics:
        - sender_host:
            name: sender_host
            usage: LABEL
            description: Host of the PostgreSQL instance this WAL receiver is connected to
        - sender_port:
            name: sender_port
            usage: LABEL
            description: Port number of the PostgreSQL instance this WAL receiver is connected to.
        - slot_name:
            name: slot_name
            usage: LABEL
            description: Replication slot name used by this WAL receiver
        - pid:
            name: pid
            usage: GAUGE
            description: Process ID of the WAL receiver process
        - state:
            name: state
            usage: LABEL
            description: Encoded activity status of the WAL receiver process 0-4 for streaming|startup|catchup|backup|stopping
        - init_lsn:
            name: init_lsn
            usage: COUNTER
            description: First write-ahead log location used when WAL receiver is started
        - init_tli:
            name: init_tli
            usage: COUNTER
            description: First timeline number used when WAL receiver is started
        - flush_lsn:
            name: flush_lsn
            usage: COUNTER
            description: Last write-ahead log location already received and flushed to disk
        - flush_tli:
            name: flush_tli
            usage: COUNTER
            description: Timeline number of last write-ahead log location received and flushed to disk
        - reported_lsn:
            name: reported_lsn
            usage: COUNTER
            description: Last write-ahead log location reported to origin WAL sender
        - msg_send_time:
            name: msg_send_time
            usage: GAUGE
            description: Send time of last message received from origin WAL sender
        - msg_recv_time:
            name: msg_recv_time
            usage: GAUGE
            description: Receipt time of last message received from origin WAL sender
        - reported_time:
            name: reported_time
            usage: GAUGE
            description: Time of last write-ahead log location reported to origin WAL sender
        - time:
            name: time
            usage: GAUGE
            description: Time of current snapshot


##
# SYNNOPSIS
#       pg_sub.pg_sub_10_*
#
# DESCRIPTION
#       PostgreSQL subscription statistics ()
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    100000 ~ higher
#       Source     260-pg_sub.yml
#
# METRICS
#       subname (LABEL)
#           Name of this subscription
#       id (GAUGE)
#           OID of the subscription
#       pid (GAUGE)
#           Process ID of the subscription main apply worker process
#       received_lsn (COUNTER)
#           Last write-ahead log location received
#       reported_lsn (COUNTER)
#           Last write-ahead log location reported to origin WAL sender
#       msg_send_time (GAUGE)
#           Send time of last message received from origin WAL sender
#       msg_recv_time (GAUGE)
#           Receipt time of last message received from origin WAL sender
#       reported_time (GAUGE)
#           Time of last write-ahead log location reported to origin WAL sender
#
pg_sub_10:
    name: pg_sub
    desc: PostgreSQL subscription statistics ()
    query: |
        SELECT subname, subid AS id, pid,
               received_lsn - '0/0' AS received_lsn, latest_end_lsn - '0/0' AS reported_lsn,
               extract(epoch from last_msg_send_time) AS msg_send_time,
               extract(epoch from last_msg_receipt_time) AS msg_recv_time,
               extract(epoch from latest_end_time) AS reported_time
        FROM pg_stat_subscription WHERE relid ISNULL;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 100000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - subname:
            name: subname
            usage: LABEL
            description: Name of this subscription
        - id:
            name: id
            usage: GAUGE
            description: OID of the subscription
        - pid:
            name: pid
            usage: GAUGE
            description: Process ID of the subscription main apply worker process
        - received_lsn:
            name: received_lsn
            usage: COUNTER
            description: Last write-ahead log location received
        - reported_lsn:
            name: reported_lsn
            usage: COUNTER
            description: Last write-ahead log location reported to origin WAL sender
        - msg_send_time:
            name: msg_send_time
            usage: GAUGE
            description: Send time of last message received from origin WAL sender
        - msg_recv_time:
            name: msg_recv_time
            usage: GAUGE
            description: Receipt time of last message received from origin WAL sender
        - reported_time:
            name: reported_time
            usage: GAUGE
            description: Time of last write-ahead log location reported to origin WAL sender


##
# SYNNOPSIS
#       pg_origin_*
#
# DESCRIPTION
#       PostgreSQL replay state (approximate) for a certain origin
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90500 ~ higher
#       Source     270-pg_origin.yml
#
# METRICS
#       roiname (LABEL)
#           The external, user defined, name of a replication origin.
#       remote_lsn (LABEL)
#           The origin node's LSN up to which data has been replicated.
#       local_lsn (LABEL)
#           This node's LSN at which remote_lsn has been replicated.
#
pg_origin:
    name: pg_origin
    desc: PostgreSQL replay state (approximate) for a certain origin
    query: SELECT roname, remote_lsn - '0/0' AS remote_lsn, local_lsn - '0/0' AS local_lsn FROM pg_replication_origin o LEFT JOIN pg_replication_origin_status os ON o.roident = os.local_id;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 90500
    max_version: 0
    fatal: false
    skip: true
    metrics:
        - roiname:
            name: roiname
            usage: LABEL
            description: The external, user defined, name of a replication origin.
        - remote_lsn:
            name: remote_lsn
            usage: LABEL
            description: The origin node's LSN up to which data has been replicated.
        - local_lsn:
            name: local_lsn
            usage: LABEL
            description: This node's LSN at which remote_lsn has been replicated.


##
# SYNNOPSIS
#       pg_size_*
#
# DESCRIPTION
#       PostgreSQL Database, WAL, Log size since v10
#
# OPTIONS
#       Tags       [cluster]
#       TTL        60
#       Priority   0
#       Timeout    1s
#       Fatal      false
#       Version    100000 ~ higher
#       Source     310-pg_size.yml
#
# METRICS
#       datname (LABEL)
#           Database name, or special category 'wal' , 'log'
#       bytes (GAUGE)
#           File size in bytes
#
pg_size:
    name: pg_size
    desc: PostgreSQL Database, WAL, Log size since v10
    query: |
        SELECT datname, pg_database_size(oid) AS bytes FROM pg_database UNION ALL
          SELECT 'log' AS datname, (SELECT (coalesce(sum(size), 0)) AS size FROM pg_catalog.pg_ls_logdir()) AS bytes UNION ALL
          SELECT 'wal' AS datname, (SELECT (coalesce(sum(size), 0)) AS size FROM pg_catalog.pg_ls_waldir()) AS bytes;
    tags:
        - cluster
    ttl: 60
    timeout: 1
    min_version: 100000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Database name, or special category 'wal' , 'log'
        - bytes:
            name: bytes
            usage: GAUGE
            description: File size in bytes


##
# SYNNOPSIS
#       pg_archiver_*
#
# DESCRIPTION
#       PostgreSQL archiver process statistics
#
# OPTIONS
#       Tags       [cluster]
#       TTL        60
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90400 ~ higher
#       Source     320-pg_archiver.yml
#
# METRICS
#       finish_count (COUNTER)
#           Number of WAL files that have been successfully archived
#       failed_count (COUNTER)
#           Number of failed attempts for archiving WAL files
#       last_finish_time (COUNTER)
#           Time of the last successful archive operation
#       last_failed_time (COUNTER)
#           Time of the last failed archival operation
#       reset_time (GAUGE)
#           Time at which archive statistics were last reset
#
pg_archiver:
    name: pg_archiver
    desc: PostgreSQL archiver process statistics
    query: SELECT archived_count AS finish_count, failed_count, last_archived_time AS last_finish_time, last_failed_time, extract(EPOCH FROM stats_reset) AS reset_time FROM pg_stat_archiver;
    tags:
        - cluster
    ttl: 60
    timeout: 0.1
    min_version: 90400
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - finish_count:
            name: finish_count
            usage: COUNTER
            description: Number of WAL files that have been successfully archived
        - failed_count:
            name: failed_count
            usage: COUNTER
            description: Number of failed attempts for archiving WAL files
        - last_finish_time:
            name: last_finish_time
            usage: COUNTER
            description: Time of the last successful archive operation
        - last_failed_time:
            name: last_failed_time
            usage: COUNTER
            description: Time of the last failed archival operation
        - reset_time:
            name: reset_time
            usage: GAUGE
            description: Time at which archive statistics were last reset


##
# SYNNOPSIS
#       pg_bgwriter_*
#
# DESCRIPTION
#       PostgreSQL background writer metrics
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90400 ~ higher
#       Source     330-pg_bgwriter.yml
#
# METRICS
#       checkpoints_timed (COUNTER)
#           Number of scheduled checkpoints that have been performed
#       checkpoints_req (COUNTER)
#           Number of requested checkpoints that have been performed
#       checkpoint_write_time (COUNTER)
#           Total amount of time that has been spent in the portion of checkpoint processing where files are written to disk, in seconds
#       checkpoint_sync_time (COUNTER)
#           Total amount of time that has been spent in the portion of checkpoint processing where files are synchronized to disk, in seconds
#       buffers_checkpoint (COUNTER)
#           Number of buffers written during checkpoints
#       buffers_clean (COUNTER)
#           Number of buffers written by the background writer
#       buffers_backend (COUNTER)
#           Number of buffers written directly by a backend
#       maxwritten_clean (COUNTER)
#           Number of times the background writer stopped a cleaning scan because it had written too many buffers
#       buffers_backend_fsync (COUNTER)
#           Number of times a backend had to execute its own fsync call
#       buffers_alloc (COUNTER)
#           Number of buffers allocated
#       reset_time (COUNTER)
#           Time at which bgwriter statistics were last reset
#
pg_bgwriter:
    name: pg_bgwriter
    desc: PostgreSQL background writer metrics
    query: SELECT checkpoints_timed, checkpoints_req, checkpoint_write_time, checkpoint_sync_time, buffers_checkpoint, buffers_clean, buffers_backend, maxwritten_clean, buffers_backend_fsync, buffers_alloc, extract(EPOCH FROM stats_reset) AS reset_time FROM pg_stat_bgwriter;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 90400
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - checkpoints_timed:
            name: checkpoints_timed
            usage: COUNTER
            description: Number of scheduled checkpoints that have been performed
        - checkpoints_req:
            name: checkpoints_req
            usage: COUNTER
            description: Number of requested checkpoints that have been performed
        - checkpoint_write_time:
            name: checkpoint_write_time
            usage: COUNTER
            scale: "1e-3"
            description: Total amount of time that has been spent in the portion of checkpoint processing where files are written to disk, in seconds
        - checkpoint_sync_time:
            name: checkpoint_sync_time
            usage: COUNTER
            scale: "1e-3"
            description: Total amount of time that has been spent in the portion of checkpoint processing where files are synchronized to disk, in seconds
        - buffers_checkpoint:
            name: buffers_checkpoint
            usage: COUNTER
            description: Number of buffers written during checkpoints
        - buffers_clean:
            name: buffers_clean
            usage: COUNTER
            description: Number of buffers written by the background writer
        - buffers_backend:
            name: buffers_backend
            usage: COUNTER
            description: Number of buffers written directly by a backend
        - maxwritten_clean:
            name: maxwritten_clean
            usage: COUNTER
            description: Number of times the background writer stopped a cleaning scan because it had written too many buffers
        - buffers_backend_fsync:
            name: buffers_backend_fsync
            usage: COUNTER
            description: Number of times a backend had to execute its own fsync call
        - buffers_alloc:
            name: buffers_alloc
            usage: COUNTER
            description: Number of buffers allocated
        - reset_time:
            name: reset_time
            usage: COUNTER
            description: Time at which bgwriter statistics were last reset


##
# SYNNOPSIS
#       pg_ssl_*
#
# DESCRIPTION
#       PostgreSQL SSL client conenction count
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90500 ~ higher
#       Source     340-pg_ssl.yml
#
# METRICS
#       enabled (GAUGE)
#           Number of client connection that use ssl
#       disabled (GAUGE)
#           Number of client connection that does not use ssl
#
pg_ssl:
    name: pg_ssl
    desc: PostgreSQL SSL client conenction count
    query: |
        SELECT count(*) FILTER (WHERE ssl) AS enabled, count(*) FILTER ( WHERE NOT ssl) AS disabled FROM pg_stat_ssl;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 90500
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - enabled:
            name: enabled
            usage: GAUGE
            description: Number of client connection that use ssl
        - disabled:
            name: disabled
            usage: GAUGE
            description: Number of client connection that does not use ssl


##
# SYNNOPSIS
#       pg_checkpoint_*
#
# DESCRIPTION
#       checkpoint information from pg_control_checkpoint since 10
#
# OPTIONS
#       Tags       [cluster]
#       TTL        60
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    100000 ~ higher
#       Source     350-pg_checkpoint.yml
#
# METRICS
#       checkpoint_lsn (COUNTER)
#           Latest checkpoint location
#       redo_lsn (COUNTER)
#           Latest checkpoint's REDO location
#       tli (COUNTER)
#           Latest checkpoint's TimeLineID
#       prev_tli (COUNTER)
#           Latest checkpoint's PrevTimeLineID
#       full_page_writes (GAUGE)
#           Latest checkpoint's full_page_writes enabled
#       next_xid_epoch (COUNTER)
#           Latest checkpoint's NextXID epoch
#       next_xid (COUNTER)
#           Latest checkpoint's NextXID xid
#       next_oid (COUNTER)
#           Latest checkpoint's NextOID
#       next_multixact_id (COUNTER)
#           Latest checkpoint's NextMultiXactId
#       next_multi_offset (COUNTER)
#           Latest checkpoint's NextMultiOffset
#       oldest_xid (COUNTER)
#           Latest checkpoint's oldestXID
#       oldest_xid_dbid (GAUGE)
#           Latest checkpoint's oldestXID's DB OID
#       oldest_active_xid (COUNTER)
#           Latest checkpoint's oldestActiveXID
#       oldest_multi_xid (COUNTER)
#           Latest checkpoint's oldestMultiXid
#       oldest_multi_dbid (GAUGE)
#           Latest checkpoint's oldestMulti's DB OID
#       oldest_commit_ts_xid (COUNTER)
#           Latest checkpoint's oldestCommitTsXid
#       newest_commit_ts_xid (COUNTER)
#           Latest checkpoint's newestCommitTsXid
#       time (COUNTER)
#           Time of latest checkpoint
#       elapse (GAUGE)
#           Seconds elapsed since latest checkpoint in seconds
#
pg_checkpoint:
    name: pg_checkpoint
    desc: checkpoint information from pg_control_checkpoint since 10
    query: SELECT checkpoint_lsn - '0/0' AS checkpoint_lsn, redo_lsn - '0/0' AS redo_lsn, timeline_id AS tli, prev_timeline_id AS prev_tli, full_page_writes, split_part(next_xid, ':', 1) AS next_xid_epoch, split_part(next_xid, ':', 2) AS next_xid, next_oid::BIGINT, next_multixact_id::text::BIGINT, next_multi_offset::text::BIGINT, oldest_xid::text::BIGINT, oldest_xid_dbid::text::BIGINT, oldest_active_xid::text::BIGINT, oldest_multi_xid::text::BIGINT, oldest_multi_dbid::BIGINT, oldest_commit_ts_xid::text::BIGINT, newest_commit_ts_xid::text::BIGINT, checkpoint_time AS time, extract(epoch from now() - checkpoint_time) AS elapse FROM pg_control_checkpoint();
    tags:
        - cluster
    ttl: 60
    timeout: 0.1
    min_version: 100000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - checkpoint_lsn:
            name: checkpoint_lsn
            usage: COUNTER
            description: Latest checkpoint location
        - redo_lsn:
            name: redo_lsn
            usage: COUNTER
            description: Latest checkpoint's REDO location
        - tli:
            name: tli
            usage: COUNTER
            description: Latest checkpoint's TimeLineID
        - prev_tli:
            name: prev_tli
            usage: COUNTER
            description: Latest checkpoint's PrevTimeLineID
        - full_page_writes:
            name: full_page_writes
            usage: GAUGE
            description: Latest checkpoint's full_page_writes enabled
        - next_xid_epoch:
            name: next_xid_epoch
            usage: COUNTER
            description: Latest checkpoint's NextXID epoch
        - next_xid:
            name: next_xid
            usage: COUNTER
            description: Latest checkpoint's NextXID xid
        - next_oid:
            name: next_oid
            usage: COUNTER
            description: Latest checkpoint's NextOID
        - next_multixact_id:
            name: next_multixact_id
            usage: COUNTER
            description: Latest checkpoint's NextMultiXactId
        - next_multi_offset:
            name: next_multi_offset
            usage: COUNTER
            description: Latest checkpoint's NextMultiOffset
        - oldest_xid:
            name: oldest_xid
            usage: COUNTER
            description: Latest checkpoint's oldestXID
        - oldest_xid_dbid:
            name: oldest_xid_dbid
            usage: GAUGE
            description: Latest checkpoint's oldestXID's DB OID
        - oldest_active_xid:
            name: oldest_active_xid
            usage: COUNTER
            description: Latest checkpoint's oldestActiveXID
        - oldest_multi_xid:
            name: oldest_multi_xid
            usage: COUNTER
            description: Latest checkpoint's oldestMultiXid
        - oldest_multi_dbid:
            name: oldest_multi_dbid
            usage: GAUGE
            description: Latest checkpoint's oldestMulti's DB OID
        - oldest_commit_ts_xid:
            name: oldest_commit_ts_xid
            usage: COUNTER
            description: Latest checkpoint's oldestCommitTsXid
        - newest_commit_ts_xid:
            name: newest_commit_ts_xid
            usage: COUNTER
            description: Latest checkpoint's newestCommitTsXid
        - time:
            name: time
            usage: COUNTER
            description: Time of latest checkpoint
        - elapse:
            name: elapse
            usage: GAUGE
            description: Seconds elapsed since latest checkpoint in seconds


##
# SYNNOPSIS
#       pg_recovery_*
#
# DESCRIPTION
#       PostgreSQL control recovery metrics (9.6+)
#
# OPTIONS
#       Tags       [cluster, replica]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90600 ~ higher
#       Source     360-pg_recovery.yml
#
# METRICS
#       min_timeline (COUNTER)
#           Min recovery ending loc's timeline
#       min_lsn (COUNTER)
#           Minimum recovery ending location
#       backup_start_lsn (COUNTER)
#           Backup start location
#       backup_end_lsn (COUNTER)
#           Backup end location
#       require_record (GAUGE)
#           End-of-backup record required
#
pg_recovery:
    name: pg_recovery
    desc: PostgreSQL control recovery metrics (9.6+)
    query: |
        SELECT min_recovery_end_timeline    AS min_timeline,
          min_recovery_end_lsn - '0/0' AS min_lsn,
          backup_start_lsn - '0/0'     AS backup_start_lsn,
          backup_end_lsn - '0/0'       AS backup_end_lsn,
          end_of_backup_record_required AS require_record
        FROM pg_control_recovery();
    tags:
        - cluster
        - replica
    ttl: 10
    timeout: 0.1
    min_version: 90600
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - min_timeline:
            name: min_timeline
            usage: COUNTER
            description: Min recovery ending loc's timeline
        - min_lsn:
            name: min_lsn
            usage: COUNTER
            description: Minimum recovery ending location
        - backup_start_lsn:
            name: backup_start_lsn
            usage: COUNTER
            description: Backup start location
        - backup_end_lsn:
            name: backup_end_lsn
            usage: COUNTER
            description: Backup end location
        - require_record:
            name: require_record
            usage: GAUGE
            description: End-of-backup record required


##
# SYNNOPSIS
#       pg_slru.pg_slru_13_*
#
# DESCRIPTION
#       PostgreSQL simple-least-recently-used (SLRU) cache statistics v13
#
# OPTIONS
#       Tags       [cluster]
#       TTL        60
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    130000 ~ higher
#       Source     370-pg_slru.yml
#
# METRICS
#       name (LABEL)
#           Name of the SLRU
#       blks_zeroed (COUNTER)
#           Number of blocks zeroed during initializations
#       blks_hit (COUNTER)
#           Number of times disk blocks were found already in the SLRU, so that a read was not necessary
#       blks_read (COUNTER)
#           Number of disk blocks read for this SLRU
#       blks_written (COUNTER)
#           Number of disk blocks written for this SLRU
#       blks_exists (COUNTER)
#           Number of blocks checked for existence for this SLRU
#       flushes (COUNTER)
#           Number of flushes of dirty data for this SLRU
#       truncates (COUNTER)
#           Number of truncates for this SLRU
#       reset_time (COUNTER)
#           Time at which these statistics were last reset
#
pg_slru_13:
    name: pg_slru
    desc: PostgreSQL simple-least-recently-used (SLRU) cache statistics v13
    query: SELECT name, blks_zeroed, blks_hit, blks_read, blks_written, blks_exists, flushes, truncates, extract(EPOCH FROM stats_reset) AS reset_time FROM pg_stat_slru;
    tags:
        - cluster
    ttl: 60
    timeout: 0.1
    min_version: 130000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - name:
            name: name
            usage: LABEL
            description: Name of the SLRU
        - blks_zeroed:
            name: blks_zeroed
            usage: COUNTER
            description: Number of blocks zeroed during initializations
        - blks_hit:
            name: blks_hit
            usage: COUNTER
            description: Number of times disk blocks were found already in the SLRU, so that a read was not necessary
        - blks_read:
            name: blks_read
            usage: COUNTER
            description: Number of disk blocks read for this SLRU
        - blks_written:
            name: blks_written
            usage: COUNTER
            description: Number of disk blocks written for this SLRU
        - blks_exists:
            name: blks_exists
            usage: COUNTER
            description: Number of blocks checked for existence for this SLRU
        - flushes:
            name: flushes
            usage: COUNTER
            description: Number of flushes of dirty data for this SLRU
        - truncates:
            name: truncates
            usage: COUNTER
            description: Number of truncates for this SLRU
        - reset_time:
            name: reset_time
            usage: COUNTER
            description: Time at which these statistics were last reset


##
# SYNNOPSIS
#       pg_shmem_*
#
# DESCRIPTION
#       Allocations made from the server's main shared memory segment
#
# OPTIONS
#       Tags       [cluster, schema:monitor]
#       TTL        60
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    130000 ~ higher
#       Source     380-pg_shmem.yml
#
# METRICS
#       name (LABEL)
#           Name of the shared memory allocation
#       offset (GAUGE)
#           The offset at which the allocation starts
#       size (GAUGE)
#           Size of the allocation
#       allocated_size (GAUGE)
#           Size of the allocation including padding
#
pg_shmem:
    name: pg_shmem
    desc: Allocations made from the server's main shared memory segment
    query: SELECT coalesce(name, 'Free') AS name, off AS offset, size, allocated_size FROM monitor.pg_shmem();
    tags:
        - cluster
        - schema:monitor
    ttl: 60
    timeout: 0.1
    min_version: 130000
    max_version: 0
    fatal: false
    skip: true
    metrics:
        - name:
            name: name
            usage: LABEL
            description: Name of the shared memory allocation
        - offset:
            name: offset
            usage: GAUGE
            description: The offset at which the allocation starts
        - size:
            name: size
            usage: GAUGE
            description: Size of the allocation
        - allocated_size:
            name: allocated_size
            usage: GAUGE
            description: Size of the allocation including padding


##
# SYNNOPSIS
#       pg_wal.pg_wal_14_*
#
# DESCRIPTION
#       PostgreSQL WAL statistics since v14
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    140000 ~ higher
#       Source     390-pg_wal.yml
#
# METRICS
#       records (COUNTER)
#           Total number of WAL records generated
#       fpi (COUNTER)
#           Total number of WAL full page images generated
#       bytes (COUNTER)
#           Total amount of WAL generated in bytes
#       buffers_full (COUNTER)
#           Number of times WAL data was written to disk because WAL buffers became full
#       write (COUNTER)
#           Number of times WAL buffers were written out to disk via XLogWrite request.
#       sync (COUNTER)
#           Number of times WAL files were synced to disk via issue_xlog_fsync request
#       write_time (COUNTER)
#           Total amount of time spent writing WAL buffers to disk via XLogWrite request in seconds
#       sync_time (COUNTER)
#           Total amount of time spent syncing WAL files to disk via issue_xlog_fsync request, in seconds
#       reset_time (COUNTER)
#           When statistics were last reset
#
pg_wal_14:
    name: pg_wal
    desc: PostgreSQL WAL statistics since v14
    query: SELECT wal_records AS records, wal_fpi AS fpi, wal_bytes AS bytes, wal_buffers_full AS buffers_full, wal_write AS write, wal_sync AS sync, wal_write_time AS write_time, wal_sync_time AS sync_time, extract(EPOCH FROM stats_reset) AS reset_time FROM pg_stat_wal;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 140000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - records:
            name: records
            usage: COUNTER
            description: Total number of WAL records generated
        - fpi:
            name: fpi
            usage: COUNTER
            description: Total number of WAL full page images generated
        - bytes:
            name: bytes
            usage: COUNTER
            description: Total amount of WAL generated in bytes
        - buffers_full:
            name: buffers_full
            usage: COUNTER
            description: Number of times WAL data was written to disk because WAL buffers became full
        - write:
            name: write
            usage: COUNTER
            description: Number of times WAL buffers were written out to disk via XLogWrite request.
        - sync:
            name: sync
            usage: COUNTER
            description: Number of times WAL files were synced to disk via issue_xlog_fsync request
        - write_time:
            name: write_time
            usage: COUNTER
            scale: "1e-3"
            description: Total amount of time spent writing WAL buffers to disk via XLogWrite request in seconds
        - sync_time:
            name: sync_time
            usage: COUNTER
            scale: "1e-3"
            description: Total amount of time spent syncing WAL files to disk via issue_xlog_fsync request, in seconds
        - reset_time:
            name: reset_time
            usage: COUNTER
            description: When statistics were last reset


##
# SYNNOPSIS
#       pg_activity_*
#
# DESCRIPTION
#       PostgreSQL backend activity group by database and state
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90400 ~ higher
#       Source     410-pg_activity.yml
#
# METRICS
#       datname (LABEL)
#           Name of the database this backend is connected to
#       state (LABEL)
#           Current overall state of this backend.
#       count (GAUGE)
#           Count of connection among (datname,state)
#       max_duration (GAUGE)
#           Max duration since last state change among (datname, state)
#       max_tx_duration (GAUGE)
#           Max transaction duration since state change among (datname, state)
#       max_conn_duration (GAUGE)
#           Max backend session duration since state change among (datname, state)
#
pg_activity:
    name: pg_activity
    desc: PostgreSQL backend activity group by database and state
    query: |
        SELECT datname, state, coalesce(count, 0) AS count, coalesce(max_duration, 0) AS max_duration, coalesce(max_tx_duration, 0) AS max_tx_duration, coalesce(max_conn_duration, 0) AS max_conn_duration FROM
            (SELECT d.datname, a.state FROM pg_database d, unnest(ARRAY ['active','idle','idle in transaction','idle in transaction (aborted)','fastpath function call','disabled']) a(state) WHERE d.datallowconn AND NOT d.datistemplate) base
              LEFT JOIN (SELECT datname, state, count(*) AS count, max(extract(epoch from now() - state_change)) AS max_duration, max(extract(epoch from now() - xact_start))
              AS max_tx_duration, max(extract(epoch from now() - backend_start)) AS max_conn_duration FROM pg_stat_activity WHERE pid <> pg_backend_pid() GROUP BY 1,2) data USING (datname,state);
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 90400
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Name of the database this backend is connected to
        - state:
            name: state
            usage: LABEL
            description: Current overall state of this backend.
        - count:
            name: count
            usage: GAUGE
            description: Count of connection among (datname,state)
        - max_duration:
            name: max_duration
            usage: GAUGE
            description: Max duration since last state change among (datname, state)
        - max_tx_duration:
            name: max_tx_duration
            usage: GAUGE
            description: Max transaction duration since state change among (datname, state)
        - max_conn_duration:
            name: max_conn_duration
            usage: GAUGE
            description: Max backend session duration since state change among (datname, state)


##
# SYNNOPSIS
#       pg_wait_*
#
# DESCRIPTION
#       PostgreSQL backend client count group by wait event type since 9.6
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90600 ~ higher
#       Source     420-pg_wait.yml
#
# METRICS
#       datname (LABEL)
#           Name of the database this backend is connected to
#       event (LABEL)
#           Wait event type, LWLock, Lock, BufferPin, Activity, Extension, Client, IPC, Timeout, IO
#       count (GAUGE)
#           Count of WaitEvent on target database
#
pg_wait:
    name: pg_wait
    desc: PostgreSQL backend client count group by wait event type since 9.6
    query: |
        SELECT datname, wait_event_type AS event, count(*) AS count FROM pg_stat_activity WHERE datname NOT IN ('template0', 'template1') AND backend_type = 'client backend' AND pid <> pg_backend_pid() GROUP BY 1, 2;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 90600
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Name of the database this backend is connected to
        - event:
            name: event
            usage: LABEL
            description: Wait event type, LWLock, Lock, BufferPin, Activity, Extension, Client, IPC, Timeout, IO
        - count:
            name: count
            usage: GAUGE
            description: Count of WaitEvent on target database


##
# SYNNOPSIS
#       pg_backend_*
#
# DESCRIPTION
#       PostgreSQL backend client count group by wait event type since 9.6
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90600 ~ higher
#       Source     430-pg_backend.yml
#
# METRICS
#       type (LABEL)
#           Database backend process type
#       count (GAUGE)
#           Database backend process count by backend_type
#
pg_backend:
    name: pg_backend
    desc: PostgreSQL backend client count group by wait event type since 9.6
    query: SELECT backend_type AS "type", count(*) AS count FROM pg_stat_activity GROUP BY backend_type;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 90600
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - type:
            name: type
            usage: LABEL
            description: Database backend process type
        - count:
            name: count
            usage: GAUGE
            description: Database backend process count by backend_type


##
# SYNNOPSIS
#       pg_xact_*
#
# DESCRIPTION
#       PostgreSQL transaction identifier metrics
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90400 ~ higher
#       Source     440-pg_xact.yml
#
# METRICS
#       xmin (COUNTER)
#           Earliest txid that is still active
#       xmax (COUNTER)
#           First as-yet-unassigned txid. txid >= this are invisible.
#       xnum (GAUGE)
#           Current active transaction count
#
pg_xact:
    name: pg_xact
    desc: PostgreSQL transaction identifier metrics
    query: WITH snap(v) AS (SELECT txid_current_snapshot()), xset(v) AS  (SELECT txid_snapshot_xip(v) FROM snap), xnum(v) AS (SELECT count(*) from xset), xmin(v) AS (SELECT txid_snapshot_xmin(v) FROM snap), xmax(v) AS (SELECT txid_snapshot_xmin(v) FROM snap) SELECT xmin.v AS xmin, xmax.v AS xmax, xnum.v AS xnum FROM xmin, xmax, xnum;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 90400
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - xmin:
            name: xmin
            usage: COUNTER
            description: Earliest txid that is still active
        - xmax:
            name: xmax
            usage: COUNTER
            description: First as-yet-unassigned txid. txid >= this are invisible.
        - xnum:
            name: xnum
            usage: GAUGE
            description: Current active transaction count


##
# SYNNOPSIS
#       pg_lock_*
#
# DESCRIPTION
#       PostgreSQL lock distribution by mode and database
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90400 ~ higher
#       Source     450-pg_lock.yml
#
# METRICS
#       datname (LABEL)
#           Name of the database this backend is connected to
#       mode (LABEL)
#           Name of the lock mode held or desired by this process
#       count (GAUGE)
#           Number of locks of corresponding mode and database
#
pg_lock:
    name: pg_lock
    desc: PostgreSQL lock distribution by mode and database
    query: |
        SELECT datname, mode, coalesce(count, 0) AS count
          FROM (SELECT d.oid AS database, d.datname, l.mode FROM pg_database d, unnest(ARRAY ['AccessShareLock','RowShareLock','RowExclusiveLock','ShareUpdateExclusiveLock', 'ShareLock','ShareRowExclusiveLock','ExclusiveLock','AccessExclusiveLock']) l(mode) WHERE d.datallowconn AND NOT d.datistemplate) base
          LEFT JOIN (SELECT database, mode, count(*) AS count FROM pg_locks WHERE database IS NOT NULL GROUP BY 1, 2) cnt USING (database, mode);
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 90400
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Name of the database this backend is connected to
        - mode:
            name: mode
            usage: LABEL
            description: Name of the lock mode held or desired by this process
        - count:
            name: count
            usage: GAUGE
            description: Number of locks of corresponding mode and database


##
# SYNNOPSIS
#       pg_query.pg_query_13_*
#
# DESCRIPTION
#       PostgreSQL Query metrics, require pg_stat_statements installed in schema monitor, pg13
#
# OPTIONS
#       Tags       [cluster, schema:monitor, extension:pg_stat_statements]
#       TTL        10
#       Priority   0
#       Timeout    1s
#       Fatal      false
#       Version    130000 ~ higher
#       Source     460-pg_query.yml
#
# METRICS
#       datname (LABEL)
#           Name of database
#       query (LABEL)
#           QueryID generated from internal hash code, computed from the statement's parse tree
#       calls (COUNTER)
#           Number of times the statement was executed
#       rows (COUNTER)
#           Total number of rows retrieved or affected by the statement
#       exec_time (COUNTER)
#           Total time spent executing the statement, in µs
#       io_time (COUNTER)
#           Total time the statement spent reading and writing blocks, in µs
#       wal_bytes (COUNTER)
#           Total amount of WAL bytes generated by the statement
#
pg_query_13:
    name: pg_query
    desc: PostgreSQL Query metrics, require pg_stat_statements installed in schema monitor, pg13
    query: |
        SELECT datname, queryid AS query, sum(calls) AS calls, sum(rows) AS rows, sum(total_exec_time) AS exec_time, sum(blk_read_time) + sum(blk_write_time) AS io_time, sum(wal_bytes) AS wal_bytes
          FROM monitor.pg_stat_statements(false) s JOIN pg_database d ON s.dbid = d.oid WHERE userid != 10 AND calls > 4 GROUP BY 1, 2 ORDER BY 5 DESC LIMIT 64;
    tags:
        - cluster
        - schema:monitor
        - extension:pg_stat_statements
    ttl: 10
    timeout: 1
    min_version: 130000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Name of database
        - query:
            name: query
            usage: LABEL
            description: QueryID generated from internal hash code, computed from the statement's parse tree
        - calls:
            name: calls
            usage: COUNTER
            description: Number of times the statement was executed
        - rows:
            name: rows
            usage: COUNTER
            description: Total number of rows retrieved or affected by the statement
        - exec_time:
            name: exec_time
            usage: COUNTER
            scale: "1e-3"
            description: Total time spent executing the statement, in µs
        - io_time:
            name: io_time
            usage: COUNTER
            scale: "1e-3"
            description: Total time the statement spent reading and writing blocks, in µs
        - wal_bytes:
            name: wal_bytes
            usage: COUNTER
            description: Total amount of WAL bytes generated by the statement

##
# SYNNOPSIS
#       pg_query.pg_query_94_12_*
#
# DESCRIPTION
#       PostgreSQL query statement metrics, require pg_stat_statements installed in schema monitor, 9.4 ~ 12
#
# OPTIONS
#       Tags       [cluster, schema:monitor, extension:pg_stat_statements]
#       TTL        10
#       Priority   0
#       Timeout    1s
#       Fatal      false
#       Version    90400 ~ 130000
#       Source     460-pg_query.yml
#
# METRICS
#       datname (LABEL)
#           Name of database
#       query (LABEL)
#           QueryID generated from internal hash code, computed from the statement's parse tree
#       calls (COUNTER)
#           Number of times the statement was executed
#       rows (COUNTER)
#           Total number of rows retrieved or affected by the statement
#       exec_time (COUNTER)
#           Total time spent executing the statement, in µs
#       io_time (COUNTER)
#           Total time the statement spent reading and writing blocks, in µs
#
pg_query_94_12:
    name: pg_query
    desc: PostgreSQL query statement metrics, require pg_stat_statements installed in schema monitor, 9.4 ~ 12
    query: SELECT datname, queryid AS query, sum(calls) AS calls, sum(rows) AS rows, sum(total_time) AS exec_time, sum(blk_read_time) + sum(blk_write_time) AS io_time FROM monitor.pg_stat_statements(false) s JOIN pg_database d ON s.dbid = d.oid WHERE userid != 10 AND calls > 4 GROUP BY 1, 2 ORDER BY 5 DESC LIMIT 64;
    tags:
        - cluster
        - schema:monitor
        - extension:pg_stat_statements
    ttl: 10
    timeout: 1
    min_version: 90400
    max_version: 130000
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Name of database
        - query:
            name: query
            usage: LABEL
            description: QueryID generated from internal hash code, computed from the statement's parse tree
        - calls:
            name: calls
            usage: COUNTER
            description: Number of times the statement was executed
        - rows:
            name: rows
            usage: COUNTER
            description: Total number of rows retrieved or affected by the statement
        - exec_time:
            name: exec_time
            usage: COUNTER
            scale: "1e-3"
            description: Total time spent executing the statement, in µs
        - io_time:
            name: io_time
            usage: COUNTER
            scale: "1e-3"
            description: Total time the statement spent reading and writing blocks, in µs


##
# SYNNOPSIS
#       pg_vacuuming_*
#
# DESCRIPTION
#       PostgreSQL vacuum progress since 9.6
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    120000 ~ higher
#       Source     510-pg_vacuuming.yml
#
# METRICS
#       datname (LABEL)
#           database name
#       pid (LABEL)
#           process id of indexing table
#       relname (LABEL)
#           relation name of indexed table
#       progress (GAUGE)
#           the actual progress
#
pg_vacuuming:
    name: pg_vacuuming
    desc: PostgreSQL vacuum progress since 9.6
    query: |
        SELECT datname, pid, relid::RegClass AS relname,
            CASE phase WHEN 'scanning heap' THEN (CASE WHEN heap_blks_total > 0 THEN 1.0 * heap_blks_scanned / heap_blks_total ELSE 0.0 END)
            WHEN 'vacuuming heap' THEN (CASE WHEN heap_blks_total > 0 THEN 1.0 * heap_blks_vacuumed / heap_blks_total ELSE 0 END)
            ELSE NULL END AS progress FROM pg_stat_progress_vacuum pspv;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 120000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: database name
        - pid:
            name: pid
            usage: LABEL
            description: process id of indexing table
        - relname:
            name: relname
            usage: LABEL
            description: relation name of indexed table
        - progress:
            name: progress
            usage: GAUGE
            description: the actual progress


##
# SYNNOPSIS
#       pg_indexing_*
#
# DESCRIPTION
#       PostgreSQL index creating progress (v12+)
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    120000 ~ higher
#       Source     520-pg_indexing.yml
#
# METRICS
#       datname (LABEL)
#           Name of the database
#       pid (LABEL)
#           Process id of indexing table
#       relname (LABEL)
#           Relation name of indexed table
#       blocks (GAUGE)
#           Percent of blocks been proceeded
#       tuples (GAUGE)
#           Percent of tuples been proceeded
#       partitions (GAUGE)
#           Percent of partitions been proceeded
#       lockers (GAUGE)
#           Percent of lockers been proceeded
#
pg_indexing:
    name: pg_indexing
    desc: PostgreSQL index creating progress (v12+)
    query: |
        SELECT datname, pid, relid::RegClass AS relname,
          (CASE WHEN blocks_total > 0 THEN 1.0 * blocks_done / blocks_total ELSE NULL END) AS blocks,
          (CASE WHEN tuples_total > 0 THEN 1.0 * tuples_done / tuples_total ELSE NULL END) AS tuples,
          (CASE WHEN partitions_total > 0 THEN 1.0 * partitions_done / partitions_total ELSE NULL END) AS partitions,
          (CASE WHEN lockers_total > 0 THEN 1.0 * lockers_done / lockers_total ELSE NULL END) AS lockers
        FROM pg_stat_progress_create_index pspci;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 120000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Name of the database
        - pid:
            name: pid
            usage: LABEL
            description: Process id of indexing table
        - relname:
            name: relname
            usage: LABEL
            description: Relation name of indexed table
        - blocks:
            name: blocks
            usage: GAUGE
            description: Percent of blocks been proceeded
        - tuples:
            name: tuples
            usage: GAUGE
            description: Percent of tuples been proceeded
        - partitions:
            name: partitions
            usage: GAUGE
            description: Percent of partitions been proceeded
        - lockers:
            name: lockers
            usage: GAUGE
            description: Percent of lockers been proceeded


##
# SYNNOPSIS
#       pg_clustering_*
#
# DESCRIPTION
#       PostgreSQL cluster or vacuum full progress (v12+)
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    120000 ~ higher
#       Source     530-pg_clustering.yml
#
# METRICS
#       datname (LABEL)
#           Name of databae been clustering
#       pid (LABEL)
#           Process id of indexing table
#       relname (LABEL)
#           Relation name of indexed table
#       tup_scan (GAUGE)
#           How much tuple been scanned
#       progress (GAUGE)
#           Progress of heap been processed
#
pg_clustering:
    name: pg_clustering
    desc: PostgreSQL cluster or vacuum full progress (v12+)
    query: SELECT datname, pid, relid::RegClass AS relname, param4 AS tup_scan, CASE WHEN param6 > 0 THEN 1.0 * param7 / param6 ELSE 0 END AS progress FROM pg_stat_get_progress_info('cluster') s LEFT JOIN pg_database d ON s.datid = d.oid;;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 120000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Name of databae been clustering
        - pid:
            name: pid
            usage: LABEL
            description: Process id of indexing table
        - relname:
            name: relname
            usage: LABEL
            description: Relation name of indexed table
        - tup_scan:
            name: tup_scan
            usage: GAUGE
            description: How much tuple been scanned
        - progress:
            name: progress
            usage: GAUGE
            description: Progress of heap been processed


##
# SYNNOPSIS
#       pg_backup_*
#
# DESCRIPTION
#       PostgreSQL basebackup progress since 13
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    130000 ~ higher
#       Source     540-pg_backup.yml
#
# METRICS
#       pid (LABEL)
#           process id of basebackup sender
#       phase (GAUGE)
#           Phase encoded in 0~5 initial, wait checkpoint, estimate, streaming, waiting archive, transfer archive
#       total_bytes (GAUGE)
#           Total amount of data that will be streamed
#       sent_bytes (GAUGE)
#           Amount of data streamed
#
pg_backup:
    name: pg_backup
    desc: PostgreSQL basebackup progress since 13
    query: SELECT pid, param1 AS phase, CASE param2 WHEN -1::integer THEN NULL::bigint ELSE param2 END AS total_bytes, param3 AS sent_bytes FROM pg_stat_get_progress_info('BASEBACKUP');
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 130000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - pid:
            name: pid
            usage: LABEL
            description: process id of basebackup sender
        - phase:
            name: phase
            usage: GAUGE
            description: Phase encoded in 0~5 initial, wait checkpoint, estimate, streaming, waiting archive, transfer archive
        - total_bytes:
            name: total_bytes
            usage: GAUGE
            description: Total amount of data that will be streamed
        - sent_bytes:
            name: sent_bytes
            usage: GAUGE
            description: Amount of data streamed


##
# SYNNOPSIS
#       pg_db.pg_db_12_13_*
#
# DESCRIPTION
#       PostgreSQL database stats from pg_stat_database v12 v13 (with 2 new checksum metrics)
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    120000 ~ 140000
#       Source     610-pg_db.yml
#
# METRICS
#       datname (LABEL)
#           Name of the database
#       datid (GAUGE)
#           OID of the database
#       age (GAUGE)
#           Age of database calculated from datfrozenxid
#       is_template (GAUGE)
#           If true(1), then this database can be cloned by any user with CREATEDB privileges
#       allow_conn (GAUGE)
#           If false(0) then no one can connect to this database.
#       conn_limit (GAUGE)
#           Sets maximum number of concurrent connections that can be made to this database. -1 means no limit.
#       frozen_xid (GAUGE)
#           All transaction IDs before this one have been frozened
#       numbackends (GAUGE)
#           Number of backends currently connected to this database
#       xact_commit (COUNTER)
#           Number of transactions in this database that have been committed
#       xact_rollback (COUNTER)
#           Number of transactions in this database that have been rolled back
#       xact_total (COUNTER)
#           Number of transactions in this database
#       blks_read (COUNTER)
#           Number of disk blocks read in this database
#       blks_hit (COUNTER)
#           Number of times disk blocks were found already in the buffer cache
#       blks_access (COUNTER)
#           Number of times disk blocks that accessed read+hit
#       tup_returned (COUNTER)
#           Number of rows returned by queries in this database
#       tup_fetched (COUNTER)
#           Number of rows fetched by queries in this database
#       tup_inserted (COUNTER)
#           Number of rows inserted by queries in this database
#       tup_updated (COUNTER)
#           Number of rows updated by queries in this database
#       tup_deleted (COUNTER)
#           Number of rows deleted by queries in this database
#       tup_modified (COUNTER)
#           Number of rows modified by queries in this database
#       conflicts (COUNTER)
#           Number of queries canceled due to conflicts with recovery in this database
#       temp_files (COUNTER)
#           Number of temporary files created by queries in this database
#       temp_bytes (COUNTER)
#           Total amount of data written to temporary files by queries in this database.
#       deadlocks (COUNTER)
#           Number of deadlocks detected in this database
#       cks_fails (COUNTER)
#           Number of data page checksum failures detected in this database, -1 for not enabled
#       cks_fail_time (GAUGE)
#           Time at which the last data page checksum failure was detected in this database
#       blk_read_time (COUNTER)
#           Time spent reading data file blocks by backends in this database, in seconds
#       blk_write_time (COUNTER)
#           Time spent writing data file blocks by backends in this database, in seconds
#       reset_time (COUNTER)
#           Time at which database statistics were last reset
#
pg_db_12_13:
    name: pg_db
    desc: PostgreSQL database stats from pg_stat_database v12 v13 (with 2 new checksum metrics)
    query: |
        SELECT d.datname, datid,age(datfrozenxid) AS age, datistemplate AS is_template, datallowconn AS allow_conn, datconnlimit AS conn_limit, datfrozenxid::TEXT::BIGINT as frozen_xid,
          numbackends,xact_commit,xact_rollback,xact_rollback + xact_commit AS xact_total,blks_read,blks_hit,blks_read + blks_hit AS blks_access,tup_returned,tup_fetched,tup_inserted,tup_updated,tup_deleted,tup_inserted + tup_updated + tup_deleted AS tup_modified,
          conflicts,temp_files,temp_bytes,deadlocks,coalesce(checksum_failures, -1) AS cks_fails, checksum_last_failure AS cks_fail_time,blk_read_time,blk_write_time,
          extract(EPOCH FROM stats_reset) AS reset_time FROM pg_database d JOIN pg_stat_database sd ON d.oid = sd.datid;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 120000
    max_version: 140000
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Name of the database
        - datid:
            name: datid
            usage: GAUGE
            description: OID of the database
        - age:
            name: age
            usage: GAUGE
            description: Age of database calculated from datfrozenxid
        - is_template:
            name: is_template
            usage: GAUGE
            description: If true(1), then this database can be cloned by any user with CREATEDB privileges
        - allow_conn:
            name: allow_conn
            usage: GAUGE
            description: If false(0) then no one can connect to this database.
        - conn_limit:
            name: conn_limit
            usage: GAUGE
            description: Sets maximum number of concurrent connections that can be made to this database. -1 means no limit.
        - frozen_xid:
            name: frozen_xid
            usage: GAUGE
            description: All transaction IDs before this one have been frozened
        - numbackends:
            name: numbackends
            usage: GAUGE
            description: Number of backends currently connected to this database
        - xact_commit:
            name: xact_commit
            usage: COUNTER
            description: Number of transactions in this database that have been committed
        - xact_rollback:
            name: xact_rollback
            usage: COUNTER
            description: Number of transactions in this database that have been rolled back
        - xact_total:
            name: xact_total
            usage: COUNTER
            description: Number of transactions in this database
        - blks_read:
            name: blks_read
            usage: COUNTER
            description: Number of disk blocks read in this database
        - blks_hit:
            name: blks_hit
            usage: COUNTER
            description: Number of times disk blocks were found already in the buffer cache
        - blks_access:
            name: blks_access
            usage: COUNTER
            description: Number of times disk blocks that accessed read+hit
        - tup_returned:
            name: tup_returned
            usage: COUNTER
            description: Number of rows returned by queries in this database
        - tup_fetched:
            name: tup_fetched
            usage: COUNTER
            description: Number of rows fetched by queries in this database
        - tup_inserted:
            name: tup_inserted
            usage: COUNTER
            description: Number of rows inserted by queries in this database
        - tup_updated:
            name: tup_updated
            usage: COUNTER
            description: Number of rows updated by queries in this database
        - tup_deleted:
            name: tup_deleted
            usage: COUNTER
            description: Number of rows deleted by queries in this database
        - tup_modified:
            name: tup_modified
            usage: COUNTER
            description: Number of rows modified by queries in this database
        - conflicts:
            name: conflicts
            usage: COUNTER
            description: Number of queries canceled due to conflicts with recovery in this database
        - temp_files:
            name: temp_files
            usage: COUNTER
            description: Number of temporary files created by queries in this database
        - temp_bytes:
            name: temp_bytes
            usage: COUNTER
            description: Total amount of data written to temporary files by queries in this database.
        - deadlocks:
            name: deadlocks
            usage: COUNTER
            description: Number of deadlocks detected in this database
        - cks_fails:
            name: cks_fails
            usage: COUNTER
            description: Number of data page checksum failures detected in this database, -1 for not enabled
        - cks_fail_time:
            name: cks_fail_time
            usage: GAUGE
            description: Time at which the last data page checksum failure was detected in this database
        - blk_read_time:
            name: blk_read_time
            usage: COUNTER
            scale: "1e-3"
            description: Time spent reading data file blocks by backends in this database, in seconds
        - blk_write_time:
            name: blk_write_time
            usage: COUNTER
            scale: "1e-3"
            description: Time spent writing data file blocks by backends in this database, in seconds
        - reset_time:
            name: reset_time
            usage: COUNTER
            description: Time at which database statistics were last reset

##
# SYNNOPSIS
#       pg_db.pg_db_10_11_*
#
# DESCRIPTION
#       PostgreSQL database stats from pg_stat_database v10 v11 (actually since 9.2)
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90200 ~ 120000
#       Source     610-pg_db.yml
#
# METRICS
#       datname (LABEL)
#           Name of the database
#       datid (GAUGE)
#           OID of the database
#       age (GAUGE)
#           Age of database calculated from datfrozenxid
#       is_template (GAUGE)
#           If true(1), then this database can be cloned by any user with CREATEDB privileges
#       allow_conn (GAUGE)
#           If false(0) then no one can connect to this database.
#       conn_limit (GAUGE)
#           Sets maximum number of concurrent connections that can be made to this database. -1 means no limit.
#       frozen_xid (GAUGE)
#           All transaction IDs before this one have been frozened
#       numbackends (GAUGE)
#           Number of backends currently connected to this database
#       xact_commit (COUNTER)
#           Number of transactions in this database that have been committed
#       xact_rollback (COUNTER)
#           Number of transactions in this database that have been rolled back
#       xact_total (COUNTER)
#           Number of transactions in this database
#       blks_read (COUNTER)
#           Number of disk blocks read in this database
#       blks_hit (COUNTER)
#           Number of times disk blocks were found already in the buffer cache
#       blks_access (COUNTER)
#           Number of times disk blocks that accessed read+hit
#       tup_returned (COUNTER)
#           Number of rows returned by queries in this database
#       tup_fetched (COUNTER)
#           Number of rows fetched by queries in this database
#       tup_inserted (COUNTER)
#           Number of rows inserted by queries in this database
#       tup_updated (COUNTER)
#           Number of rows updated by queries in this database
#       tup_deleted (COUNTER)
#           Number of rows deleted by queries in this database
#       tup_modified (COUNTER)
#           Number of rows modified by queries in this database
#       conflicts (COUNTER)
#           Number of queries canceled due to conflicts with recovery in this database
#       temp_files (COUNTER)
#           Number of temporary files created by queries in this database
#       temp_bytes (COUNTER)
#           Total amount of data written to temporary files by queries in this database.
#       deadlocks (COUNTER)
#           Number of deadlocks detected in this database
#       blk_read_time (COUNTER)
#           Time spent reading data file blocks by backends in this database, in seconds
#       blk_write_time (COUNTER)
#           Time spent writing data file blocks by backends in this database, in seconds
#       reset_time (COUNTER)
#           Time at which database statistics were last reset
#
pg_db_10_11:
    name: pg_db
    desc: PostgreSQL database stats from pg_stat_database v10 v11 (actually since 9.2)
    query: |
        SELECT d.datname, datid,age(datfrozenxid) AS age, datistemplate AS is_template, datallowconn AS allow_conn, datconnlimit AS conn_limit, datfrozenxid::TEXT::BIGINT as frozen_xid,
          numbackends,xact_commit,xact_rollback,xact_rollback + xact_commit AS xact_total, blks_read,blks_hit,blks_read + blks_hit AS blks_access,tup_returned,tup_fetched,tup_inserted,tup_updated,tup_deleted,tup_inserted + tup_updated + tup_deleted AS tup_modified,
          conflicts,temp_files,temp_bytes,deadlocks,blk_read_time,blk_write_time, extract(EPOCH FROM stats_reset) AS reset_time FROM pg_database d JOIN pg_stat_database sd ON d.oid = sd.datid;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 90200
    max_version: 120000
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Name of the database
        - datid:
            name: datid
            usage: GAUGE
            description: OID of the database
        - age:
            name: age
            usage: GAUGE
            description: Age of database calculated from datfrozenxid
        - is_template:
            name: is_template
            usage: GAUGE
            description: If true(1), then this database can be cloned by any user with CREATEDB privileges
        - allow_conn:
            name: allow_conn
            usage: GAUGE
            description: If false(0) then no one can connect to this database.
        - conn_limit:
            name: conn_limit
            usage: GAUGE
            description: Sets maximum number of concurrent connections that can be made to this database. -1 means no limit.
        - frozen_xid:
            name: frozen_xid
            usage: GAUGE
            description: All transaction IDs before this one have been frozened
        - numbackends:
            name: numbackends
            usage: GAUGE
            description: Number of backends currently connected to this database
        - xact_commit:
            name: xact_commit
            usage: COUNTER
            description: Number of transactions in this database that have been committed
        - xact_rollback:
            name: xact_rollback
            usage: COUNTER
            description: Number of transactions in this database that have been rolled back
        - xact_total:
            name: xact_total
            usage: COUNTER
            description: Number of transactions in this database
        - blks_read:
            name: blks_read
            usage: COUNTER
            description: Number of disk blocks read in this database
        - blks_hit:
            name: blks_hit
            usage: COUNTER
            description: Number of times disk blocks were found already in the buffer cache
        - blks_access:
            name: blks_access
            usage: COUNTER
            description: Number of times disk blocks that accessed read+hit
        - tup_returned:
            name: tup_returned
            usage: COUNTER
            description: Number of rows returned by queries in this database
        - tup_fetched:
            name: tup_fetched
            usage: COUNTER
            description: Number of rows fetched by queries in this database
        - tup_inserted:
            name: tup_inserted
            usage: COUNTER
            description: Number of rows inserted by queries in this database
        - tup_updated:
            name: tup_updated
            usage: COUNTER
            description: Number of rows updated by queries in this database
        - tup_deleted:
            name: tup_deleted
            usage: COUNTER
            description: Number of rows deleted by queries in this database
        - tup_modified:
            name: tup_modified
            usage: COUNTER
            description: Number of rows modified by queries in this database
        - conflicts:
            name: conflicts
            usage: COUNTER
            description: Number of queries canceled due to conflicts with recovery in this database
        - temp_files:
            name: temp_files
            usage: COUNTER
            description: Number of temporary files created by queries in this database
        - temp_bytes:
            name: temp_bytes
            usage: COUNTER
            description: Total amount of data written to temporary files by queries in this database.
        - deadlocks:
            name: deadlocks
            usage: COUNTER
            description: Number of deadlocks detected in this database
        - blk_read_time:
            name: blk_read_time
            usage: COUNTER
            scale: "1e-3"
            description: Time spent reading data file blocks by backends in this database, in seconds
        - blk_write_time:
            name: blk_write_time
            usage: COUNTER
            scale: "1e-3"
            description: Time spent writing data file blocks by backends in this database, in seconds
        - reset_time:
            name: reset_time
            usage: COUNTER
            description: Time at which database statistics were last reset

##
# SYNNOPSIS
#       pg_db.pg_db_14_*
#
# DESCRIPTION
#       PostgreSQL database stats from pg_stat_database v14 (with 7 new time & session metrics)
#
# OPTIONS
#       Tags       [cluster]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    140000 ~ higher
#       Source     610-pg_db.yml
#
# METRICS
#       datname (LABEL)
#           Name of the database
#       datid (GAUGE)
#           OID of the database
#       age (GAUGE)
#           Age of database calculated from datfrozenxid
#       is_template (GAUGE)
#           If true(1), then this database can be cloned by any user with CREATEDB privileges
#       allow_conn (GAUGE)
#           If false(0) then no one can connect to this database.
#       conn_limit (GAUGE)
#           Sets maximum number of concurrent connections that can be made to this database. -1 means no limit.
#       frozen_xid (GAUGE)
#           All transaction IDs before this one have been frozened
#       numbackends (GAUGE)
#           Number of backends currently connected to this database
#       xact_commit (COUNTER)
#           Number of transactions in this database that have been committed
#       xact_rollback (COUNTER)
#           Number of transactions in this database that have been rolled back
#       xact_total (COUNTER)
#           Number of transactions in this database
#       blks_read (COUNTER)
#           Number of disk blocks read in this database
#       blks_hit (COUNTER)
#           Number of times disk blocks were found already in the buffer cache
#       blks_access (COUNTER)
#           Number of times disk blocks that accessed read+hit
#       tup_returned (COUNTER)
#           Number of rows returned by queries in this database
#       tup_fetched (COUNTER)
#           Number of rows fetched by queries in this database
#       tup_inserted (COUNTER)
#           Number of rows inserted by queries in this database
#       tup_updated (COUNTER)
#           Number of rows updated by queries in this database
#       tup_deleted (COUNTER)
#           Number of rows deleted by queries in this database
#       tup_modified (COUNTER)
#           Number of rows modified by queries in this database
#       conflicts (COUNTER)
#           Number of queries canceled due to conflicts with recovery in this database
#       temp_files (COUNTER)
#           Number of temporary files created by queries in this database
#       temp_bytes (COUNTER)
#           Total amount of data written to temporary files by queries in this database.
#       deadlocks (COUNTER)
#           Number of deadlocks detected in this database
#       cks_fails (COUNTER)
#           Number of data page checksum failures detected in this database, -1 for not enabled
#       cks_fail_time (GAUGE)
#           Time at which the last data page checksum failure was detected in this database
#       blk_read_time (COUNTER)
#           Time spent reading data file blocks by backends in this database, in seconds
#       blk_write_time (COUNTER)
#           Time spent writing data file blocks by backends in this database, in seconds
#       session_time (COUNTER)
#           Time spent by database sessions in this database, in seconds
#       active_time (COUNTER)
#           Time spent executing SQL statements in this database, in seconds
#       ixact_time (COUNTER)
#           Time spent idling while in a transaction in this database, in seconds
#       sessions (COUNTER)
#           Total number of sessions established to this database
#       sessions_abandoned (COUNTER)
#           Number of database sessions to this database that were terminated because connection to the client was lost
#       sessions_fatal (COUNTER)
#           Number of database sessions to this database that were terminated by fatal errors
#       sessions_killed (COUNTER)
#           Number of database sessions to this database that were terminated by operator intervention
#       reset_time (COUNTER)
#           Time at which database statistics were last reset
#
pg_db_14:
    name: pg_db
    desc: PostgreSQL database stats from pg_stat_database v14 (with 7 new time & session metrics)
    query: |
        SELECT d.datname, datid,age(datfrozenxid) AS age, datistemplate AS is_template, datallowconn AS allow_conn, datconnlimit AS conn_limit, datfrozenxid::TEXT::BIGINT as frozen_xid,
          numbackends,xact_commit,xact_rollback,xact_rollback + xact_commit AS xact_total,blks_read,blks_hit,blks_read + blks_hit AS blks_access,tup_returned,tup_fetched,tup_inserted,tup_updated,tup_deleted,tup_inserted + tup_updated + tup_deleted AS tup_modified,
          conflicts,temp_files,temp_bytes,deadlocks,coalesce(checksum_failures, -1) AS cks_fails, checksum_last_failure AS cks_fail_time,blk_read_time,blk_write_time,
          session_time,active_time,idle_in_transaction_time AS ixact_time,sessions,sessions_abandoned,sessions_fatal,sessions_killed,extract(EPOCH FROM stats_reset) AS reset_time
        FROM pg_database d JOIN pg_stat_database sd ON d.oid = sd.datid;
    tags:
        - cluster
    ttl: 10
    timeout: 0.1
    min_version: 140000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Name of the database
        - datid:
            name: datid
            usage: GAUGE
            description: OID of the database
        - age:
            name: age
            usage: GAUGE
            description: Age of database calculated from datfrozenxid
        - is_template:
            name: is_template
            usage: GAUGE
            description: If true(1), then this database can be cloned by any user with CREATEDB privileges
        - allow_conn:
            name: allow_conn
            usage: GAUGE
            description: If false(0) then no one can connect to this database.
        - conn_limit:
            name: conn_limit
            usage: GAUGE
            description: Sets maximum number of concurrent connections that can be made to this database. -1 means no limit.
        - frozen_xid:
            name: frozen_xid
            usage: GAUGE
            description: All transaction IDs before this one have been frozened
        - numbackends:
            name: numbackends
            usage: GAUGE
            description: Number of backends currently connected to this database
        - xact_commit:
            name: xact_commit
            usage: COUNTER
            description: Number of transactions in this database that have been committed
        - xact_rollback:
            name: xact_rollback
            usage: COUNTER
            description: Number of transactions in this database that have been rolled back
        - xact_total:
            name: xact_total
            usage: COUNTER
            description: Number of transactions in this database
        - blks_read:
            name: blks_read
            usage: COUNTER
            description: Number of disk blocks read in this database
        - blks_hit:
            name: blks_hit
            usage: COUNTER
            description: Number of times disk blocks were found already in the buffer cache
        - blks_access:
            name: blks_access
            usage: COUNTER
            description: Number of times disk blocks that accessed read+hit
        - tup_returned:
            name: tup_returned
            usage: COUNTER
            description: Number of rows returned by queries in this database
        - tup_fetched:
            name: tup_fetched
            usage: COUNTER
            description: Number of rows fetched by queries in this database
        - tup_inserted:
            name: tup_inserted
            usage: COUNTER
            description: Number of rows inserted by queries in this database
        - tup_updated:
            name: tup_updated
            usage: COUNTER
            description: Number of rows updated by queries in this database
        - tup_deleted:
            name: tup_deleted
            usage: COUNTER
            description: Number of rows deleted by queries in this database
        - tup_modified:
            name: tup_modified
            usage: COUNTER
            description: Number of rows modified by queries in this database
        - conflicts:
            name: conflicts
            usage: COUNTER
            description: Number of queries canceled due to conflicts with recovery in this database
        - temp_files:
            name: temp_files
            usage: COUNTER
            description: Number of temporary files created by queries in this database
        - temp_bytes:
            name: temp_bytes
            usage: COUNTER
            description: Total amount of data written to temporary files by queries in this database.
        - deadlocks:
            name: deadlocks
            usage: COUNTER
            description: Number of deadlocks detected in this database
        - cks_fails:
            name: cks_fails
            usage: COUNTER
            description: Number of data page checksum failures detected in this database, -1 for not enabled
        - cks_fail_time:
            name: cks_fail_time
            usage: GAUGE
            description: Time at which the last data page checksum failure was detected in this database
        - blk_read_time:
            name: blk_read_time
            usage: COUNTER
            scale: "1e-3"
            description: Time spent reading data file blocks by backends in this database, in seconds
        - blk_write_time:
            name: blk_write_time
            usage: COUNTER
            scale: "1e-3"
            description: Time spent writing data file blocks by backends in this database, in seconds
        - session_time:
            name: session_time
            usage: COUNTER
            scale: "1e-3"
            description: Time spent by database sessions in this database, in seconds
        - active_time:
            name: active_time
            usage: COUNTER
            scale: "1e-3"
            description: Time spent executing SQL statements in this database, in seconds
        - ixact_time:
            name: ixact_time
            usage: COUNTER
            scale: "1e-3"
            description: Time spent idling while in a transaction in this database, in seconds
        - sessions:
            name: sessions
            usage: COUNTER
            description: Total number of sessions established to this database
        - sessions_abandoned:
            name: sessions_abandoned
            usage: COUNTER
            description: Number of database sessions to this database that were terminated because connection to the client was lost
        - sessions_fatal:
            name: sessions_fatal
            usage: COUNTER
            description: Number of database sessions to this database that were terminated by fatal errors
        - sessions_killed:
            name: sessions_killed
            usage: COUNTER
            description: Number of database sessions to this database that were terminated by operator intervention
        - reset_time:
            name: reset_time
            usage: COUNTER
            description: Time at which database statistics were last reset


##
# SYNNOPSIS
#       pg_db_confl_*
#
# DESCRIPTION
#       PostgreSQL database conflicts metrics (only available on replica)
#
# OPTIONS
#       Tags       [cluster, replica]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90100 ~ higher
#       Source     620-pg_db_conf.yml
#
# METRICS
#       datid (DISCARD)
#           N/A
#       datname (LABEL)
#           Name of this database
#       confl_tablespace (COUNTER)
#           Number of queries in this database that have been canceled due to dropped tablespaces
#       confl_lock (COUNTER)
#           Number of queries in this database that have been canceled due to lock timeouts
#       confl_snapshot (COUNTER)
#           Number of queries in this database that have been canceled due to old snapshots
#       confl_bufferpin (COUNTER)
#           Number of queries in this database that have been canceled due to pinned buffers
#       confl_deadlock (COUNTER)
#           Number of queries in this database that have been canceled due to deadlocks
#
pg_db_confl:
    name: pg_db_confl
    desc: PostgreSQL database conflicts metrics (only available on replica)
    query: SELECT * FROM pg_stat_database_conflicts;
    tags:
        - cluster
        - replica
    ttl: 10
    timeout: 0.1
    min_version: 90100
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datid:
            name: datid
            usage: DISCARD
        - datname:
            name: datname
            usage: LABEL
            description: Name of this database
        - confl_tablespace:
            name: confl_tablespace
            usage: COUNTER
            description: Number of queries in this database that have been canceled due to dropped tablespaces
        - confl_lock:
            name: confl_lock
            usage: COUNTER
            description: Number of queries in this database that have been canceled due to lock timeouts
        - confl_snapshot:
            name: confl_snapshot
            usage: COUNTER
            description: Number of queries in this database that have been canceled due to old snapshots
        - confl_bufferpin:
            name: confl_bufferpin
            usage: COUNTER
            description: Number of queries in this database that have been canceled due to pinned buffers
        - confl_deadlock:
            name: confl_deadlock
            usage: COUNTER
            description: Number of queries in this database that have been canceled due to deadlocks


##
# SYNNOPSIS
#       pg_pubrel_*
#
# DESCRIPTION
#       PostgreSQL publication and relation count
#
# OPTIONS
#       Tags       []
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    100000 ~ higher
#       Source     640-pg_pubrel.yml
#
# METRICS
#       datname (LABEL)
#           Name of the database which publication belonged
#       pubname (LABEL)
#           Name of the publication
#       count (GAUGE)
#           Count of relation in the publication
#
pg_pubrel:
    name: pg_pubrel
    desc: PostgreSQL publication and relation count
    query: SELECT CURRENT_CATALOG AS datname, pubname, count(*) AS count FROM pg_publication p, LATERAL pg_get_publication_tables(pubname) GROUP BY pubname;
    tags: []
    ttl: 10
    timeout: 0.1
    min_version: 100000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Name of the database which publication belonged
        - pubname:
            name: pubname
            usage: LABEL
            description: Name of the publication
        - count:
            name: count
            usage: GAUGE
            description: Count of relation in the publication


##
# SYNNOPSIS
#       pg_subrel_*
#
# DESCRIPTION
#       PostgreSQL subscripted relation group by state
#
# OPTIONS
#       Tags       []
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    100000 ~ higher
#       Source     650-pg_subrel.yml
#
# METRICS
#       datname (LABEL)
#           Name of the database which publication belonged
#       subname (LABEL)
#           Name of the subscription
#       state (LABEL)
#           State of table in subscription, i=initialize, d=data copy, s=sync, r=ready
#       count (GAUGE)
#           Count of relation in this subscription and corresponding state
#
pg_subrel:
    name: pg_subrel
    desc: PostgreSQL subscripted relation group by state
    query: SELECT CURRENT_CATALOG AS datname, subname, srsubstate::TEXT AS state, count(*) AS count FROM pg_subscription_rel sr LEFT JOIN pg_stat_subscription  ss ON sr.srsubid = ss.subid GROUP BY 2, 3;
    tags: []
    ttl: 10
    timeout: 0.1
    min_version: 100000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Name of the database which publication belonged
        - subname:
            name: subname
            usage: LABEL
            description: Name of the subscription
        - state:
            name: state
            usage: LABEL
            description: State of table in subscription, i=initialize, d=data copy, s=sync, r=ready
        - count:
            name: count
            usage: GAUGE
            description: Count of relation in this subscription and corresponding state


##
# SYNNOPSIS
#       pg_table.pg_table_10_12_*
#
# DESCRIPTION
#       PostgreSQL table metrics (9.4-12)
#
# OPTIONS
#       Tags       []
#       TTL        10
#       Priority   0
#       Timeout    1s
#       Fatal      false
#       Version    90400 ~ 130000
#       Source     700-pg_table.yml
#
# METRICS
#       datname (LABEL)
#           Database name of this table
#       relname (LABEL)
#           Relation name of this table
#       relid (GAUGE)
#           Relation oid of this table
#       kind (GAUGE)
#           Relation kind r/table/114,m/mview/109,t/toast/116,p/partitioned/112
#       pages (GAUGE)
#           Size of the on-disk representation of this table in pages
#       tuples (COUNTER)
#           All txid before this have been forzen on this table
#       frozenxid (COUNTER)
#           All txid before this have been forzen on this table
#       age (GAUGE)
#           Age of this table in vacuum cycles
#       ncols (GAUGE)
#           Number of columns in the table
#       seq_scan (COUNTER)
#           Number of sequential scans initiated on this table
#       seq_tup_read (COUNTER)
#           Number of live rows fetched by sequential scans
#       idx_scan (COUNTER)
#           Number of index scans initiated on this table
#       idx_tup_fetch (COUNTER)
#           Number of live rows fetched by index scans
#       tbl_scan (COUNTER)
#           Number of scans initiated on this table
#       tup_read (COUNTER)
#           Number of live rows fetched by scans
#       n_tup_ins (COUNTER)
#           Number of rows inserted
#       n_tup_upd (COUNTER)
#           Number of rows updated (includes HOT updated rows)
#       n_tup_del (COUNTER)
#           Number of rows deleted
#       n_tup_mod (COUNTER)
#           Number of rows modified (insert + update + delete)
#       n_tup_hot_upd (COUNTER)
#           Number of rows HOT updated (i.e with no separate index update required)
#       n_live_tup (GAUGE)
#           Estimated number of live rows
#       n_dead_tup (GAUGE)
#           Estimated number of dead rows
#       n_mod_since_analyze (GAUGE)
#           Estimated number of rows modified since this table was last analyzed
#       last_vacuum (DISCARD)
#           Last time at which this table was manually vacuumed (not counting VACUUM FULL)
#       last_autovacuum (DISCARD)
#           Last time at which this table was vacuumed by the autovacuum daemon
#       last_analyze (DISCARD)
#           Last time at which this table was manually analyzed
#       last_autoanalyze (DISCARD)
#           Last time at which this table was analyzed by the autovacuum daemon
#       vacuum_count (COUNTER)
#           Number of times this table has been manually vacuumed (not counting VACUUM FULL)
#       autovacuum_count (COUNTER)
#           Number of times this table has been vacuumed by the autovacuum daemon
#       analyze_count (COUNTER)
#           Number of times this table has been manually analyzed
#       autoanalyze_count (COUNTER)
#           Number of times this table has been analyzed by the autovacuum daemon
#       heap_blks_read (COUNTER)
#           Number of disk blocks read from this table
#       heap_blks_hit (COUNTER)
#           Number of buffer hits in this table
#       idx_blks_read (COUNTER)
#           Number of disk blocks read from all indexes on this table
#       idx_blks_hit (COUNTER)
#           Number of buffer hits in all indexes on this table
#       toast_blks_read (DISCARD)
#           Number of disk blocks read from this table's TOAST table (if any)
#       toast_blks_hit (DISCARD)
#           Number of buffer hits in this table's TOAST table (if any)
#       tidx_blks_read (DISCARD)
#           Number of disk blocks read from this table's TOAST table indexes (if any)
#       tidx_blks_hit (DISCARD)
#           Number of buffer hits in this table's TOAST table indexes (if any)
#
pg_table_10_12:
    name: pg_table
    desc: PostgreSQL table metrics (9.4-12)
    query: |
        SELECT CURRENT_CATALOG AS datname, relnamespace::RegNamespace || '.' || c.relname AS relname, ascii(relkind) AS kind,
           relpages AS pages, reltuples AS tuples, relfrozenxid AS frozenxid, age(relfrozenxid) AS age, relnatts AS ncols,
           seq_scan,seq_tup_read,idx_scan,idx_tup_fetch,seq_scan + idx_scan AS tbl_scan, seq_tup_read + idx_tup_fetch AS tup_read,
           n_tup_ins,n_tup_upd,n_tup_del,(n_tup_ins + n_tup_upd + n_tup_del) AS n_tup_mod,n_tup_hot_upd,n_live_tup,n_dead_tup,
           n_mod_since_analyze,last_vacuum,last_autovacuum,last_analyze,last_autoanalyze,
           vacuum_count,autovacuum_count,analyze_count,autoanalyze_count,
           heap_blks_read,heap_blks_hit,idx_blks_read,idx_blks_hit,toast_blks_read,toast_blks_hit,tidx_blks_read,tidx_blks_hit
        FROM pg_class c, LATERAL (SELECT * FROM pg_stat_user_tables WHERE relid = c.oid LIMIT 1) psut, LATERAL (SELECT * FROM pg_statio_user_tables WHERE relid = c.oid LIMIT 1) psutio
        WHERE relnamespace = ANY (SELECT oid FROM pg_namespace WHERE nspname <> ALL (ARRAY ['pg_catalog','information_schema','pg_toast','columnar']) AND nspname !~ 'timescaledb' AND nspname !~ 'citus' ) AND relkind = ANY (ARRAY ['r', 'm', 't', 'p'])
        ORDER BY relpages DESC LIMIT 256;
    tags: []
    ttl: 10
    timeout: 1
    min_version: 90400
    max_version: 130000
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Database name of this table
        - relname:
            name: relname
            usage: LABEL
            description: Relation name of this table
        - relid:
            name: relid
            usage: GAUGE
            description: Relation oid of this table
        - kind:
            name: kind
            usage: GAUGE
            description: Relation kind r/table/114,m/mview/109,t/toast/116,p/partitioned/112
        - pages:
            name: pages
            usage: GAUGE
            description: Size of the on-disk representation of this table in pages
        - tuples:
            name: tuples
            usage: COUNTER
            description: All txid before this have been forzen on this table
        - frozenxid:
            name: frozenxid
            usage: COUNTER
            description: All txid before this have been forzen on this table
        - age:
            name: age
            usage: GAUGE
            description: Age of this table in vacuum cycles
        - ncols:
            name: ncols
            usage: GAUGE
            description: Number of columns in the table
        - seq_scan:
            name: seq_scan
            usage: COUNTER
            default: "0"
            description: Number of sequential scans initiated on this table
        - seq_tup_read:
            name: seq_tup_read
            usage: COUNTER
            default: "0"
            description: Number of live rows fetched by sequential scans
        - idx_scan:
            name: idx_scan
            usage: COUNTER
            default: "0"
            description: Number of index scans initiated on this table
        - idx_tup_fetch:
            name: idx_tup_fetch
            usage: COUNTER
            default: "0"
            description: Number of live rows fetched by index scans
        - tbl_scan:
            name: tbl_scan
            usage: COUNTER
            default: "0"
            description: Number of scans initiated on this table
        - tup_read:
            name: tup_read
            usage: COUNTER
            default: "0"
            description: Number of live rows fetched by scans
        - n_tup_ins:
            name: n_tup_ins
            usage: COUNTER
            default: "0"
            description: Number of rows inserted
        - n_tup_upd:
            name: n_tup_upd
            usage: COUNTER
            default: "0"
            description: Number of rows updated (includes HOT updated rows)
        - n_tup_del:
            name: n_tup_del
            usage: COUNTER
            default: "0"
            description: Number of rows deleted
        - n_tup_mod:
            name: n_tup_mod
            usage: COUNTER
            default: "0"
            description: Number of rows modified (insert + update + delete)
        - n_tup_hot_upd:
            name: n_tup_hot_upd
            usage: COUNTER
            default: "0"
            description: Number of rows HOT updated (i.e with no separate index update required)
        - n_live_tup:
            name: n_live_tup
            usage: GAUGE
            description: Estimated number of live rows
        - n_dead_tup:
            name: n_dead_tup
            usage: GAUGE
            description: Estimated number of dead rows
        - n_mod_since_analyze:
            name: n_mod_since_analyze
            usage: GAUGE
            description: Estimated number of rows modified since this table was last analyzed
        - last_vacuum:
            name: last_vacuum
            usage: DISCARD
            description: Last time at which this table was manually vacuumed (not counting VACUUM FULL)
        - last_autovacuum:
            name: last_autovacuum
            usage: DISCARD
            description: Last time at which this table was vacuumed by the autovacuum daemon
        - last_analyze:
            name: last_analyze
            usage: DISCARD
            description: Last time at which this table was manually analyzed
        - last_autoanalyze:
            name: last_autoanalyze
            usage: DISCARD
            description: Last time at which this table was analyzed by the autovacuum daemon
        - vacuum_count:
            name: vacuum_count
            usage: COUNTER
            default: "0"
            description: Number of times this table has been manually vacuumed (not counting VACUUM FULL)
        - autovacuum_count:
            name: autovacuum_count
            usage: COUNTER
            default: "0"
            description: Number of times this table has been vacuumed by the autovacuum daemon
        - analyze_count:
            name: analyze_count
            usage: COUNTER
            default: "0"
            description: Number of times this table has been manually analyzed
        - autoanalyze_count:
            name: autoanalyze_count
            usage: COUNTER
            default: "0"
            description: Number of times this table has been analyzed by the autovacuum daemon
        - heap_blks_read:
            name: heap_blks_read
            usage: COUNTER
            default: "0"
            description: Number of disk blocks read from this table
        - heap_blks_hit:
            name: heap_blks_hit
            usage: COUNTER
            default: "0"
            description: Number of buffer hits in this table
        - idx_blks_read:
            name: idx_blks_read
            usage: COUNTER
            default: "0"
            description: Number of disk blocks read from all indexes on this table
        - idx_blks_hit:
            name: idx_blks_hit
            usage: COUNTER
            default: "0"
            description: Number of buffer hits in all indexes on this table
        - toast_blks_read:
            name: toast_blks_read
            usage: DISCARD
            default: "0"
            description: Number of disk blocks read from this table's TOAST table (if any)
        - toast_blks_hit:
            name: toast_blks_hit
            usage: DISCARD
            default: "0"
            description: Number of buffer hits in this table's TOAST table (if any)
        - tidx_blks_read:
            name: tidx_blks_read
            usage: DISCARD
            default: "0"
            description: Number of disk blocks read from this table's TOAST table indexes (if any)
        - tidx_blks_hit:
            name: tidx_blks_hit
            usage: DISCARD
            default: "0"
            description: Number of buffer hits in this table's TOAST table indexes (if any)

##
# SYNNOPSIS
#       pg_table.pg_table_13_*
#
# DESCRIPTION
#       PostgreSQL table metrics (v13 with n_ins_since_vacuum)
#
# OPTIONS
#       Tags       []
#       TTL        10
#       Priority   0
#       Timeout    1s
#       Fatal      false
#       Version    130000 ~ higher
#       Source     700-pg_table.yml
#
# METRICS
#       datname (LABEL)
#           Database name of this table
#       relname (LABEL)
#           Relation name of this table
#       relid (GAUGE)
#           Relation oid of this table
#       kind (GAUGE)
#           Relation kind r/table/114,m/mview/109,t/toast/116,p/partitioned/112
#       pages (GAUGE)
#           Size of the on-disk representation of this table in pages
#       tuples (COUNTER)
#           All txid before this have been forzen on this table
#       frozenxid (COUNTER)
#           All txid before this have been forzen on this table
#       age (GAUGE)
#           Age of this table in vacuum cycles
#       ncols (GAUGE)
#           Number of columns in the table
#       seq_scan (COUNTER)
#           Number of sequential scans initiated on this table
#       seq_tup_read (COUNTER)
#           Number of live rows fetched by sequential scans
#       idx_scan (COUNTER)
#           Number of index scans initiated on this table
#       idx_tup_fetch (COUNTER)
#           Number of live rows fetched by index scans
#       tbl_scan (COUNTER)
#           Number of scans initiated on this table
#       tup_read (COUNTER)
#           Number of live rows fetched by scans
#       n_tup_ins (COUNTER)
#           Number of rows inserted
#       n_tup_upd (COUNTER)
#           Number of rows updated (includes HOT updated rows)
#       n_tup_del (COUNTER)
#           Number of rows deleted
#       n_tup_mod (COUNTER)
#           Number of rows modified (insert + update + delete)
#       n_tup_hot_upd (COUNTER)
#           Number of rows HOT updated (i.e with no separate index update required)
#       n_live_tup (GAUGE)
#           Estimated number of live rows
#       n_dead_tup (GAUGE)
#           Estimated number of dead rows
#       n_mod_since_analyze (GAUGE)
#           Estimated number of rows modified since this table was last analyzed
#       n_ins_since_vacuum (GAUGE)
#           Estimated number of rows inserted since this table was last vacuumed
#       last_vacuum (DISCARD)
#           Last time at which this table was manually vacuumed (not counting VACUUM FULL)
#       last_autovacuum (DISCARD)
#           Last time at which this table was vacuumed by the autovacuum daemon
#       last_analyze (DISCARD)
#           Last time at which this table was manually analyzed
#       last_autoanalyze (DISCARD)
#           Last time at which this table was analyzed by the autovacuum daemon
#       vacuum_count (COUNTER)
#           Number of times this table has been manually vacuumed (not counting VACUUM FULL)
#       autovacuum_count (COUNTER)
#           Number of times this table has been vacuumed by the autovacuum daemon
#       analyze_count (COUNTER)
#           Number of times this table has been manually analyzed
#       autoanalyze_count (COUNTER)
#           Number of times this table has been analyzed by the autovacuum daemon
#       heap_blks_read (COUNTER)
#           Number of disk blocks read from this table
#       heap_blks_hit (COUNTER)
#           Number of buffer hits in this table
#       idx_blks_read (COUNTER)
#           Number of disk blocks read from all indexes on this table
#       idx_blks_hit (COUNTER)
#           Number of buffer hits in all indexes on this table
#       toast_blks_read (DISCARD)
#           Number of disk blocks read from this table's TOAST table (if any)
#       toast_blks_hit (DISCARD)
#           Number of buffer hits in this table's TOAST table (if any)
#       tidx_blks_read (DISCARD)
#           Number of disk blocks read from this table's TOAST table indexes (if any)
#       tidx_blks_hit (DISCARD)
#           Number of buffer hits in this table's TOAST table indexes (if any)
#
pg_table_13:
    name: pg_table
    desc: PostgreSQL table metrics (v13 with n_ins_since_vacuum)
    query: |
        SELECT CURRENT_CATALOG AS datname, relnamespace::RegNamespace || '.' || c.relname AS relname, c.oid AS relid, ascii(relkind) AS kind,
           relpages AS pages, reltuples AS tuples, relfrozenxid AS frozenxid, age(relfrozenxid) AS age, relnatts AS ncols,
           seq_scan,seq_tup_read,idx_scan,idx_tup_fetch,seq_scan + idx_scan AS tbl_scan, seq_tup_read + idx_tup_fetch AS tup_read,
           n_tup_ins,n_tup_upd,n_tup_del,(n_tup_ins + n_tup_upd + n_tup_del) AS n_tup_mod,n_tup_hot_upd,n_live_tup,n_dead_tup,
           n_mod_since_analyze,n_ins_since_vacuum,last_vacuum,last_autovacuum,last_analyze,last_autoanalyze,
           vacuum_count,autovacuum_count,analyze_count,autoanalyze_count,
           heap_blks_read,heap_blks_hit,idx_blks_read,idx_blks_hit,toast_blks_read,toast_blks_hit,tidx_blks_read,tidx_blks_hit
        FROM pg_class c, LATERAL (SELECT * FROM pg_stat_user_tables WHERE relid = c.oid LIMIT 1) psut, LATERAL (SELECT * FROM pg_statio_user_tables WHERE relid = c.oid LIMIT 1) psutio
        WHERE relnamespace = ANY (SELECT oid FROM pg_namespace WHERE nspname <> ALL (ARRAY ['pg_catalog','information_schema','pg_toast','columnar']) AND nspname !~ 'timescaledb' AND nspname !~ 'citus' ) AND relkind = ANY (ARRAY ['r', 'm', 't', 'p'])
        ORDER BY relpages DESC LIMIT 256;
    tags: []
    ttl: 10
    timeout: 1
    min_version: 130000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Database name of this table
        - relname:
            name: relname
            usage: LABEL
            description: Relation name of this table
        - relid:
            name: relid
            usage: GAUGE
            description: Relation oid of this table
        - kind:
            name: kind
            usage: GAUGE
            description: Relation kind r/table/114,m/mview/109,t/toast/116,p/partitioned/112
        - pages:
            name: pages
            usage: GAUGE
            description: Size of the on-disk representation of this table in pages
        - tuples:
            name: tuples
            usage: COUNTER
            description: All txid before this have been forzen on this table
        - frozenxid:
            name: frozenxid
            usage: COUNTER
            description: All txid before this have been forzen on this table
        - age:
            name: age
            usage: GAUGE
            description: Age of this table in vacuum cycles
        - ncols:
            name: ncols
            usage: GAUGE
            description: Number of columns in the table
        - seq_scan:
            name: seq_scan
            usage: COUNTER
            default: "0"
            description: Number of sequential scans initiated on this table
        - seq_tup_read:
            name: seq_tup_read
            usage: COUNTER
            default: "0"
            description: Number of live rows fetched by sequential scans
        - idx_scan:
            name: idx_scan
            usage: COUNTER
            default: "0"
            description: Number of index scans initiated on this table
        - idx_tup_fetch:
            name: idx_tup_fetch
            usage: COUNTER
            default: "0"
            description: Number of live rows fetched by index scans
        - tbl_scan:
            name: tbl_scan
            usage: COUNTER
            default: "0"
            description: Number of scans initiated on this table
        - tup_read:
            name: tup_read
            usage: COUNTER
            default: "0"
            description: Number of live rows fetched by scans
        - n_tup_ins:
            name: n_tup_ins
            usage: COUNTER
            default: "0"
            description: Number of rows inserted
        - n_tup_upd:
            name: n_tup_upd
            usage: COUNTER
            default: "0"
            description: Number of rows updated (includes HOT updated rows)
        - n_tup_del:
            name: n_tup_del
            usage: COUNTER
            default: "0"
            description: Number of rows deleted
        - n_tup_mod:
            name: n_tup_mod
            usage: COUNTER
            default: "0"
            description: Number of rows modified (insert + update + delete)
        - n_tup_hot_upd:
            name: n_tup_hot_upd
            usage: COUNTER
            default: "0"
            description: Number of rows HOT updated (i.e with no separate index update required)
        - n_live_tup:
            name: n_live_tup
            usage: GAUGE
            description: Estimated number of live rows
        - n_dead_tup:
            name: n_dead_tup
            usage: GAUGE
            description: Estimated number of dead rows
        - n_mod_since_analyze:
            name: n_mod_since_analyze
            usage: GAUGE
            description: Estimated number of rows modified since this table was last analyzed
        - n_ins_since_vacuum:
            name: n_ins_since_vacuum
            usage: GAUGE
            description: Estimated number of rows inserted since this table was last vacuumed
        - last_vacuum:
            name: last_vacuum
            usage: DISCARD
            description: Last time at which this table was manually vacuumed (not counting VACUUM FULL)
        - last_autovacuum:
            name: last_autovacuum
            usage: DISCARD
            description: Last time at which this table was vacuumed by the autovacuum daemon
        - last_analyze:
            name: last_analyze
            usage: DISCARD
            description: Last time at which this table was manually analyzed
        - last_autoanalyze:
            name: last_autoanalyze
            usage: DISCARD
            description: Last time at which this table was analyzed by the autovacuum daemon
        - vacuum_count:
            name: vacuum_count
            usage: COUNTER
            default: "0"
            description: Number of times this table has been manually vacuumed (not counting VACUUM FULL)
        - autovacuum_count:
            name: autovacuum_count
            usage: COUNTER
            default: "0"
            description: Number of times this table has been vacuumed by the autovacuum daemon
        - analyze_count:
            name: analyze_count
            usage: COUNTER
            default: "0"
            description: Number of times this table has been manually analyzed
        - autoanalyze_count:
            name: autoanalyze_count
            usage: COUNTER
            default: "0"
            description: Number of times this table has been analyzed by the autovacuum daemon
        - heap_blks_read:
            name: heap_blks_read
            usage: COUNTER
            default: "0"
            description: Number of disk blocks read from this table
        - heap_blks_hit:
            name: heap_blks_hit
            usage: COUNTER
            default: "0"
            description: Number of buffer hits in this table
        - idx_blks_read:
            name: idx_blks_read
            usage: COUNTER
            default: "0"
            description: Number of disk blocks read from all indexes on this table
        - idx_blks_hit:
            name: idx_blks_hit
            usage: COUNTER
            default: "0"
            description: Number of buffer hits in all indexes on this table
        - toast_blks_read:
            name: toast_blks_read
            usage: DISCARD
            default: "0"
            description: Number of disk blocks read from this table's TOAST table (if any)
        - toast_blks_hit:
            name: toast_blks_hit
            usage: DISCARD
            default: "0"
            description: Number of buffer hits in this table's TOAST table (if any)
        - tidx_blks_read:
            name: tidx_blks_read
            usage: DISCARD
            default: "0"
            description: Number of disk blocks read from this table's TOAST table indexes (if any)
        - tidx_blks_hit:
            name: tidx_blks_hit
            usage: DISCARD
            default: "0"
            description: Number of buffer hits in this table's TOAST table indexes (if any)


##
# SYNNOPSIS
#       pg_index_*
#
# DESCRIPTION
#       PostgreSQL index metrics
#
# OPTIONS
#       Tags       []
#       TTL        10
#       Priority   0
#       Timeout    1s
#       Fatal      false
#       Version    90400 ~ higher
#       Source     710-pg_index.yml
#
# METRICS
#       datname (LABEL)
#           Database name of this index
#       idxname (LABEL)
#           Name of this index (full-qualifed schema name)
#       relname (LABEL)
#           Name of the table for this index (full-qualifed schema name)
#       relid (LABEL)
#           Relation oid of this index
#       relpages (GAUGE)
#           Size of the on-disk representation of this index in pages
#       reltuples (GAUGE)
#           Estimate relation tuples
#       idx_scan (COUNTER)
#           Number of index scans initiated on this index
#       idx_tup_read (COUNTER)
#           Number of index entries returned by scans on this index
#       idx_tup_fetch (COUNTER)
#           Number of live table rows fetched by simple index scans using this index
#       idx_blks_read (COUNTER)
#           Number of disk blocks read from this index
#       idx_blks_hit (COUNTER)
#           Number of buffer hits in this index
#
pg_index:
    name: pg_index
    desc: PostgreSQL index metrics
    query: "SELECT CURRENT_CATALOG AS datname, schemaname || '.' || indexrelname AS idxname, schemaname || '.' || relname AS relname ,indexrelid AS relid,\nrelpages, reltuples, idx_scan, idx_tup_read, idx_tup_fetch, idx_blks_read, idx_blks_hit\nFROM pg_stat_user_indexes psui, LATERAL (SELECT idx_blks_read, idx_blks_hit FROM pg_statio_user_indexes psio WHERE psio.indexrelid = psui.indexrelid LIMIT 1) p2, \n     LATERAL (SELECT relpages,reltuples FROM pg_class c WHERE c.oid = psui.indexrelid LIMIT 1) p3\nWHERE schemaname <> ALL(ARRAY['pg_catalog','information_schema','pg_toast','columnar']) AND schemaname !~'timescaledb' AND schemaname !~'citus' ORDER BY idx_tup_read DESC LIMIT 512;\n"
    tags: []
    ttl: 10
    timeout: 1
    min_version: 90400
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Database name of this index
        - idxname:
            name: idxname
            usage: LABEL
            description: Name of this index (full-qualifed schema name)
        - relname:
            name: relname
            usage: LABEL
            description: Name of the table for this index (full-qualifed schema name)
        - relid:
            name: relid
            usage: LABEL
            description: Relation oid of this index
        - relpages:
            name: relpages
            usage: GAUGE
            description: Size of the on-disk representation of this index in pages
        - reltuples:
            name: reltuples
            usage: GAUGE
            description: Estimate relation tuples
        - idx_scan:
            name: idx_scan
            usage: COUNTER
            description: Number of index scans initiated on this index
        - idx_tup_read:
            name: idx_tup_read
            usage: COUNTER
            description: Number of index entries returned by scans on this index
        - idx_tup_fetch:
            name: idx_tup_fetch
            usage: COUNTER
            description: Number of live table rows fetched by simple index scans using this index
        - idx_blks_read:
            name: idx_blks_read
            usage: COUNTER
            description: Number of disk blocks read from this index
        - idx_blks_hit:
            name: idx_blks_hit
            usage: COUNTER
            description: Number of buffer hits in this index


##
# SYNNOPSIS
#       pg_func_*
#
# DESCRIPTION
#       PostgreSQL function metrics
#
# OPTIONS
#       Tags       []
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    90400 ~ higher
#       Source     720-pg_func.yml
#
# METRICS
#       datname (LABEL)
#           Name of belonged database
#       funcname (LABEL)
#           Name of this function, may have multiple override
#       calls (COUNTER)
#           Number of times this function has been called
#       total_time (COUNTER)
#           Total time spent in this function and all other functions called by it, in ms
#       self_time (COUNTER)
#           Total time spent in this function itself, not including other functions called by it, in ms
#
pg_func:
    name: pg_func
    desc: PostgreSQL function metrics
    query: SELECT CURRENT_CATALOG AS datname, schemaname || '.' || funcname AS funcname, sum(calls) AS calls, sum(total_time) AS total_time, sum(self_time) AS self_time FROM pg_stat_user_functions GROUP BY 2 ORDER BY 4 DESC LIMIT 128;
    tags: []
    ttl: 10
    timeout: 0.1
    min_version: 90400
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Name of belonged database
        - funcname:
            name: funcname
            usage: LABEL
            description: Name of this function, may have multiple override
        - calls:
            name: calls
            usage: COUNTER
            description: Number of times this function has been called
        - total_time:
            name: total_time
            usage: COUNTER
            description: Total time spent in this function and all other functions called by it, in ms
        - self_time:
            name: self_time
            usage: COUNTER
            description: Total time spent in this function itself, not including other functions called by it, in ms


##
# SYNNOPSIS
#       pg_seq_*
#
# DESCRIPTION
#       PostgreSQL sequence metrics
#
# OPTIONS
#       Tags       []
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    100000 ~ higher
#       Source     730-pg_seq.yml
#
# METRICS
#       datname (LABEL)
#           Database name of this sequence
#       seqname (LABEL)
#           Fully schema qualified sequence name
#       last_value (COUNTER)
#           The last sequence value written to disk
#       blks_read (COUNTER)
#           Number of disk blocks read from this sequence
#       blks_hit (COUNTER)
#           Number of buffer hits in this sequence
#
pg_seq:
    name: pg_seq
    desc: PostgreSQL sequence metrics
    query: SELECT CURRENT_CATALOG AS datname, schemaname || '.' || sequencename AS seqname, last_value, blks_read, blks_hit FROM pg_sequences s, LATERAL (SELECT relid, blks_read, blks_hit FROM pg_statio_all_sequences sio WHERE s.schemaname = sio.schemaname AND s.sequencename =  sio.relname LIMIT 1) d LIMIT 128;
    tags: []
    ttl: 10
    timeout: 0.1
    min_version: 100000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Database name of this sequence
        - seqname:
            name: seqname
            usage: LABEL
            description: Fully schema qualified sequence name
        - last_value:
            name: last_value
            usage: COUNTER
            description: The last sequence value written to disk
        - blks_read:
            name: blks_read
            usage: COUNTER
            description: Number of disk blocks read from this sequence
        - blks_hit:
            name: blks_hit
            usage: COUNTER
            description: Number of buffer hits in this sequence


##
# SYNNOPSIS
#       pg_relkind_*
#
# DESCRIPTION
#       Postgres relation count by kind (category, r,i,m,t,...)
#
# OPTIONS
#       Tags       []
#       TTL        60
#       Priority   0
#       Timeout    1s
#       Fatal      false
#       Version    90400 ~ higher
#       Source     740-pg_relkind.yml
#
# METRICS
#       datname (LABEL)
#           Name of database
#       relkind (LABEL)
#           Kind of this relation, could be r,i,S,t,v,m,c,f,p,I
#       count (GAUGE)
#           Number of relations of corresponding relkind
#
pg_relkind:
    name: pg_relkind
    desc: Postgres relation count by kind (category, r,i,m,t,...)
    query: SELECT CURRENT_CATALOG AS datname, relkind, count(*) AS count FROM pg_class GROUP BY relkind;
    tags: []
    ttl: 60
    timeout: 1
    min_version: 90400
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Name of database
        - relkind:
            name: relkind
            usage: LABEL
            description: Kind of this relation, could be r,i,S,t,v,m,c,f,p,I
        - count:
            name: count
            usage: GAUGE
            description: Number of relations of corresponding relkind


##
# SYNNOPSIS
#       pg_defpart_*
#
# DESCRIPTION
#       PostgreSQL default partition tuples
#
# OPTIONS
#       Tags       []
#       TTL        60
#       Priority   0
#       Timeout    1s
#       Fatal      false
#       Version    110000 ~ higher
#       Source     750-pg_defpart.yml
#
# METRICS
#       datname (LABEL)
#           Database name of this default partition
#       relname (LABEL)
#           Schema qualified default partition relation name
#       tuples (GAUGE)
#           Number of tuples in this default partition
#
pg_defpart:
    name: pg_defpart
    desc: PostgreSQL default partition tuples
    query: SELECT CURRENT_CATALOG AS datname, relnamespace::RegNamespace || '.' || relname AS relname, reltuples AS tuples FROM pg_class WHERE relpartbound IS NOT NULL AND pg_catalog.pg_get_expr(relpartbound, oid) = 'DEFAULT' ORDER BY reltuples DESC LIMIT 64;
    tags: []
    ttl: 60
    timeout: 1
    min_version: 110000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Database name of this default partition
        - relname:
            name: relname
            usage: LABEL
            description: Schema qualified default partition relation name
        - tuples:
            name: tuples
            usage: GAUGE
            description: Number of tuples in this default partition


##
# SYNNOPSIS
#       pg_table_size_*
#
# DESCRIPTION
#       PostgreSQL table size metrics, quite slow
#
# OPTIONS
#       Tags       []
#       TTL        300
#       Priority   0
#       Timeout    2s
#       Fatal      false
#       Version    100000 ~ higher
#       Source     810-pg_table_size.yml
#
# METRICS
#       datname (LABEL)
#           Database name of this table
#       relname (LABEL)
#           Schema qualified table name
#       bytes (GAUGE)
#           Total bytes of this table (including toast, index, toast index)
#       relsize (GAUGE)
#           Bytes of this table itself (main, vm, fsm)
#       indexsize (GAUGE)
#           Bytes of all related indexes of this table
#       toastsize (GAUGE)
#           Bytes of toast tables of this table
#
pg_table_size:
    name: pg_table_size
    desc: PostgreSQL table size metrics, quite slow
    query: |
        SELECT CURRENT_CATALOG AS datname, nsp.nspname || '.' || rel.relname AS relname,
           pg_total_relation_size(rel.oid)       AS bytes,
           pg_relation_size(rel.oid)             AS relsize,
           pg_indexes_size(rel.oid)              AS indexsize,
           pg_total_relation_size(reltoastrelid) AS toastsize
        FROM pg_namespace nsp JOIN pg_class rel ON nsp.oid = rel.relnamespace
        WHERE nspname <> ALL(ARRAY['pg_catalog', 'information_schema']) AND rel.relkind = 'r'
        ORDER BY 3 DESC NULLS LAST LIMIT 256;
    tags: []
    ttl: 300
    timeout: 2
    min_version: 100000
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Database name of this table
        - relname:
            name: relname
            usage: LABEL
            description: Schema qualified table name
        - bytes:
            name: bytes
            usage: GAUGE
            default: "0"
            description: Total bytes of this table (including toast, index, toast index)
        - relsize:
            name: relsize
            usage: GAUGE
            default: "0"
            description: Bytes of this table itself (main, vm, fsm)
        - indexsize:
            name: indexsize
            usage: GAUGE
            default: "0"
            description: Bytes of all related indexes of this table
        - toastsize:
            name: toastsize
            usage: GAUGE
            default: "0"
            description: Bytes of toast tables of this table


##
# SYNNOPSIS
#       pg_table_bloat_*
#
# DESCRIPTION
#       PostgreSQL table bloat metrics, require auxiliary view monitor.pg_table_bloat to work
#
# OPTIONS
#       Tags       [schema:monitor]
#       TTL        300
#       Priority   0
#       Timeout    2s
#       Fatal      false
#       Version    90400 ~ higher
#       Source     820-pg_table_bloat.yml
#
# METRICS
#       datname (LABEL)
#           Database name of this table
#       relname (LABEL)
#           Schema qualified name of this table
#       size (GAUGE)
#           Total bytes of this table
#       ratio (GAUGE)
#           Estimated bloat ratio of this table from 0 to 1
#
pg_table_bloat:
    name: pg_table_bloat
    desc: PostgreSQL table bloat metrics, require auxiliary view monitor.pg_table_bloat to work
    query: SELECT datname, nspname || '.' || relname AS relname, size, ratio FROM monitor.pg_table_bloat ORDER BY size DESC LIMIT 64;
    tags:
        - schema:monitor
    ttl: 300
    timeout: 2
    min_version: 90400
    max_version: 0
    fatal: false
    skip: true
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Database name of this table
        - relname:
            name: relname
            usage: LABEL
            description: Schema qualified name of this table
        - size:
            name: size
            usage: GAUGE
            description: Total bytes of this table
        - ratio:
            name: ratio
            usage: GAUGE
            description: Estimated bloat ratio of this table from 0 to 1


##
# SYNNOPSIS
#       pg_index_bloat_*
#
# DESCRIPTION
#       PostgreSQL index bloat metrics (btree only), require monitor.pg_index_bloat
#
# OPTIONS
#       Tags       [schema:monitor]
#       TTL        300
#       Priority   0
#       Timeout    2s
#       Fatal      false
#       Version    90400 ~ higher
#       Source     830-pg_index_bloat.yml
#
# METRICS
#       datname (LABEL)
#           Database name of this index
#       relname (LABEL)
#           Schema qualified index name
#       size (GAUGE)
#           Total bytes of this index
#       ratio (GAUGE)
#           Estimated bloat ratio of this index, 0~1
#
pg_index_bloat:
    name: pg_index_bloat
    desc: PostgreSQL index bloat metrics (btree only), require monitor.pg_index_bloat
    query: SELECT datname, nspname || '.' || relname AS relname, size, ratio FROM monitor.pg_index_bloat ORDER BY size DESC LIMIT 64;
    tags:
        - schema:monitor
    ttl: 300
    timeout: 2
    min_version: 90400
    max_version: 0
    fatal: false
    skip: true
    metrics:
        - datname:
            name: datname
            usage: LABEL
            description: Database name of this index
        - relname:
            name: relname
            usage: LABEL
            description: Schema qualified index name
        - size:
            name: size
            usage: GAUGE
            description: Total bytes of this index
        - ratio:
            name: ratio
            usage: GAUGE
            description: Estimated bloat ratio of this index, 0~1


##
# SYNNOPSIS
#       pgbouncer_list_*
#
# DESCRIPTION
#       Pgbouncer entry list
#
# OPTIONS
#       Tags       [pgbouncer]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      true
#       Version    10800 ~ higher
#       Source     910-pgbouncer_list.yml
#
# METRICS
#       list (LABEL)
#           Pgbouncer internal list name
#       items (GAUGE)
#           Number of corresponding pgbouncer object
#
pgbouncer_list:
    name: pgbouncer_list
    desc: Pgbouncer entry list
    query: SHOW LISTS;
    tags:
        - pgbouncer
    ttl: 10
    timeout: 0.1
    min_version: 10800
    max_version: 0
    fatal: true
    skip: false
    metrics:
        - list:
            name: list
            usage: LABEL
            description: Pgbouncer internal list name
        - items:
            name: items
            usage: GAUGE
            description: Number of corresponding pgbouncer object


##
# SYNNOPSIS
#       pgbouncer_database.pgbouncer_database_116_*
#
# DESCRIPTION
#       Pgbouncer database stats (since 1.16)
#
# OPTIONS
#       Tags       [pgbouncer]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    11600 ~ higher
#       Source     920-pgbouncer_database.yml
#
# METRICS
#       name (LABEL)
#           Name of configured database entry
#       host (LABEL)
#           Host that pgbouncer will connects to
#       port (LABEL)
#           Port that pgbouncer will connects to
#       database (LABEL)
#           The real database name pgbouncer connects to
#       force_user (DISCARD)
#           N/A
#       pool_size (GAUGE)
#           Maximum number of server connections
#       min_pool_size (GAUGE)
#           Minimum number of server connections
#       reserve_pool (GAUGE)
#           Maximum number of additional connections for this database
#       pool_mode (DISCARD)
#           N/A
#       max_connections (GAUGE)
#           Maximum number of allowed connections for this database
#       current_connections (GAUGE)
#           Current number of connections for this database
#       paused (GAUGE)
#           True(1) if this database is currently paused, else 0
#       disabled (GAUGE)
#           True(1) if this database is currently disabled, else 0
#
pgbouncer_database_116:
    name: pgbouncer_database
    desc: Pgbouncer database stats (since 1.16)
    query: SHOW DATABASES;
    tags:
        - pgbouncer
    ttl: 10
    timeout: 0.1
    min_version: 11600
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - name:
            name: name
            usage: LABEL
            rename: datname
            description: Name of configured database entry
        - host:
            name: host
            usage: LABEL
            description: Host that pgbouncer will connects to
        - port:
            name: port
            usage: LABEL
            description: Port that pgbouncer will connects to
        - database:
            name: database
            usage: LABEL
            rename: real_datname
            description: The real database name pgbouncer connects to
        - force_user:
            name: force_user
            usage: DISCARD
        - pool_size:
            name: pool_size
            usage: GAUGE
            description: Maximum number of server connections
        - min_pool_size:
            name: min_pool_size
            usage: GAUGE
            description: Minimum number of server connections
        - reserve_pool:
            name: reserve_pool
            usage: GAUGE
            description: Maximum number of additional connections for this database
        - pool_mode:
            name: pool_mode
            usage: DISCARD
        - max_connections:
            name: max_connections
            usage: GAUGE
            description: Maximum number of allowed connections for this database
        - current_connections:
            name: current_connections
            usage: GAUGE
            description: Current number of connections for this database
        - paused:
            name: paused
            usage: GAUGE
            description: True(1) if this database is currently paused, else 0
        - disabled:
            name: disabled
            usage: GAUGE
            description: True(1) if this database is currently disabled, else 0

##
# SYNNOPSIS
#       pgbouncer_database.pgbouncer_database_108_115_*
#
# DESCRIPTION
#       Pgbouncer database stats (1.08-1.15)
#
# OPTIONS
#       Tags       [pgbouncer]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    10800 ~ 11600
#       Source     920-pgbouncer_database.yml
#
# METRICS
#       name (LABEL)
#           Name of configured database entry
#       host (LABEL)
#           Host that pgbouncer will connects to
#       port (LABEL)
#           Port that pgbouncer will connects to
#       database (LABEL)
#           The real database name pgbouncer connects to
#       force_user (DISCARD)
#           N/A
#       pool_size (COUNTER)
#           Maximum number of server connections
#       reserve_pool (GAUGE)
#           Maximum number of additional connections for this database
#       pool_mode (DISCARD)
#           N/A
#       max_connections (GAUGE)
#           Maximum number of allowed connections for this database
#       current_connections (GAUGE)
#           Current number of connections for this database
#       paused (GAUGE)
#           True(1) if this database is currently paused, else 0
#       disabled (GAUGE)
#           True(1) if this database is currently disabled, else 0
#
pgbouncer_database_108_115:
    name: pgbouncer_database
    desc: Pgbouncer database stats (1.08-1.15)
    query: SHOW DATABASES;
    tags:
        - pgbouncer
    ttl: 10
    timeout: 0.1
    min_version: 10800
    max_version: 11600
    fatal: false
    skip: false
    metrics:
        - name:
            name: name
            usage: LABEL
            rename: datname
            description: Name of configured database entry
        - host:
            name: host
            usage: LABEL
            description: Host that pgbouncer will connects to
        - port:
            name: port
            usage: LABEL
            description: Port that pgbouncer will connects to
        - database:
            name: database
            usage: LABEL
            rename: real_datname
            description: The real database name pgbouncer connects to
        - force_user:
            name: force_user
            usage: DISCARD
        - pool_size:
            name: pool_size
            usage: COUNTER
            description: Maximum number of server connections
        - reserve_pool:
            name: reserve_pool
            usage: GAUGE
            description: Maximum number of additional connections for this database
        - pool_mode:
            name: pool_mode
            usage: DISCARD
        - max_connections:
            name: max_connections
            usage: GAUGE
            description: Maximum number of allowed connections for this database
        - current_connections:
            name: current_connections
            usage: GAUGE
            description: Current number of connections for this database
        - paused:
            name: paused
            usage: GAUGE
            description: True(1) if this database is currently paused, else 0
        - disabled:
            name: disabled
            usage: GAUGE
            description: True(1) if this database is currently disabled, else 0


##
# SYNNOPSIS
#       pgbouncer_stat_*
#
# DESCRIPTION
#       Pgbouncer stats per database
#
# OPTIONS
#       Tags       [pgbouncer]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    10800 ~ higher
#       Source     930-pgbouncer_stat.yml
#
# METRICS
#       database (LABEL)
#           Name of database
#       total_xact_count (GAUGE)
#           Total number of SQL transactions pooled by pgbouncer
#       total_query_count (GAUGE)
#           Total number of SQL queries pooled by pgbouncer
#       total_received (COUNTER)
#           Total volume in bytes of network traffic received by pgbouncer
#       total_sent (COUNTER)
#           Total volume in bytes of network traffic sent by pgbouncer
#       total_xact_time (COUNTER)
#           Total number of seconds spent when in a transaction
#       total_query_time (COUNTER)
#           Total number of seconds spent when executing queries
#       total_wait_time (COUNTER)
#           Time spent by clients waiting for a server, in seconds
#       avg_xact_count (GAUGE)
#           Average transactions per second in last stat period
#       avg_query_count (GAUGE)
#           Average queries per second in last stat period
#       avg_recv (GAUGE)
#           Average received (from clients) bytes per second
#       avg_sent (GAUGE)
#           Average sent (to clients) bytes per second
#       avg_xact_time (GAUGE)
#           Average transaction duration, in seconds
#       avg_query_time (GAUGE)
#           Average query duration, in seconds
#       avg_wait_time (GAUGE)
#           Time spent by clients waiting for a server, in seconds (average per second).
#
pgbouncer_stat:
    name: pgbouncer_stat
    desc: Pgbouncer stats per database
    query: SHOW STATS;
    tags:
        - pgbouncer
    ttl: 10
    timeout: 0.1
    min_version: 10800
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - database:
            name: database
            usage: LABEL
            rename: datname
            description: Name of database
        - total_xact_count:
            name: total_xact_count
            usage: GAUGE
            description: Total number of SQL transactions pooled by pgbouncer
        - total_query_count:
            name: total_query_count
            usage: GAUGE
            description: Total number of SQL queries pooled by pgbouncer
        - total_received:
            name: total_received
            usage: COUNTER
            description: Total volume in bytes of network traffic received by pgbouncer
        - total_sent:
            name: total_sent
            usage: COUNTER
            description: Total volume in bytes of network traffic sent by pgbouncer
        - total_xact_time:
            name: total_xact_time
            usage: COUNTER
            scale: "1e-6"
            description: Total number of seconds spent when in a transaction
        - total_query_time:
            name: total_query_time
            usage: COUNTER
            scale: "1e-6"
            description: Total number of seconds spent when executing queries
        - total_wait_time:
            name: total_wait_time
            usage: COUNTER
            scale: "1e-6"
            description: Time spent by clients waiting for a server, in seconds
        - avg_xact_count:
            name: avg_xact_count
            usage: GAUGE
            description: Average transactions per second in last stat period
        - avg_query_count:
            name: avg_query_count
            usage: GAUGE
            description: Average queries per second in last stat period
        - avg_recv:
            name: avg_recv
            usage: GAUGE
            description: Average received (from clients) bytes per second
        - avg_sent:
            name: avg_sent
            usage: GAUGE
            description: Average sent (to clients) bytes per second
        - avg_xact_time:
            name: avg_xact_time
            usage: GAUGE
            scale: "1e-6"
            description: Average transaction duration, in seconds
        - avg_query_time:
            name: avg_query_time
            usage: GAUGE
            scale: "1e-6"
            description: Average query duration, in seconds
        - avg_wait_time:
            name: avg_wait_time
            usage: GAUGE
            scale: "1e-6"
            description: Time spent by clients waiting for a server, in seconds (average per second).


##
# SYNNOPSIS
#       pgbouncer_pool.pgbouncer_pool_108_115_*
#
# DESCRIPTION
#       Pgbouncer pool stats (1.08-1.15)
#
# OPTIONS
#       Tags       [pgbouncer]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    10800 ~ 11600
#       Source     940-pgbouncer_pool.yml
#
# METRICS
#       database (LABEL)
#           Database name of this pool
#       user (LABEL)
#           User name of this pool
#       cl_active (GAUGE)
#           Client connections that are linked to server connection and can process queries
#       cl_waiting (GAUGE)
#           Client connections that have sent queries but have not yet got a server connection
#       sv_active (GAUGE)
#           Server connections that are linked to a client
#       sv_idle (GAUGE)
#           Server connections that are unused and immediately usable for client queries
#       sv_used (GAUGE)
#           Server connections that have been idle for more than server_check_delay (means have to run check query)
#       sv_tested (GAUGE)
#           Server connections that are currently running reset or check query
#       sv_login (GAUGE)
#           Server connections currently in the process of logging in
#       maxwait (GAUGE)
#           How long the first(oldest) client in the queue has waited, in seconds, key metric
#       maxwait_us (GAUGE)
#           Microsecond part of the maximum waiting time.
#       pool_mode (LABEL)
#           Pooling mode in use
#
pgbouncer_pool_108_115:
    name: pgbouncer_pool
    desc: Pgbouncer pool stats (1.08-1.15)
    query: SHOW POOLS;
    tags:
        - pgbouncer
    ttl: 10
    timeout: 0.1
    min_version: 10800
    max_version: 11600
    fatal: false
    skip: false
    metrics:
        - database:
            name: database
            usage: LABEL
            rename: datname
            description: Database name of this pool
        - user:
            name: user
            usage: LABEL
            description: User name of this pool
        - cl_active:
            name: cl_active
            usage: GAUGE
            rename: active_clients
            description: Client connections that are linked to server connection and can process queries
        - cl_waiting:
            name: cl_waiting
            usage: GAUGE
            rename: waiting_clients
            description: Client connections that have sent queries but have not yet got a server connection
        - sv_active:
            name: sv_active
            usage: GAUGE
            rename: active_servers
            description: Server connections that are linked to a client
        - sv_idle:
            name: sv_idle
            usage: GAUGE
            rename: idle_servers
            description: Server connections that are unused and immediately usable for client queries
        - sv_used:
            name: sv_used
            usage: GAUGE
            rename: used_servers
            description: Server connections that have been idle for more than server_check_delay (means have to run check query)
        - sv_tested:
            name: sv_tested
            usage: GAUGE
            rename: tested_servers
            description: Server connections that are currently running reset or check query
        - sv_login:
            name: sv_login
            usage: GAUGE
            rename: login_servers
            description: Server connections currently in the process of logging in
        - maxwait:
            name: maxwait
            usage: GAUGE
            description: How long the first(oldest) client in the queue has waited, in seconds, key metric
        - maxwait_us:
            name: maxwait_us
            usage: GAUGE
            description: Microsecond part of the maximum waiting time.
        - pool_mode:
            name: pool_mode
            usage: LABEL
            description: Pooling mode in use

##
# SYNNOPSIS
#       pgbouncer_pool.pgbouncer_pool_116_*
#
# DESCRIPTION
#       Pgbouncer pool stats (1.16+)
#
# OPTIONS
#       Tags       [pgbouncer]
#       TTL        10
#       Priority   0
#       Timeout    100ms
#       Fatal      false
#       Version    11600 ~ higher
#       Source     940-pgbouncer_pool.yml
#
# METRICS
#       database (LABEL)
#           Database name of this pool
#       user (LABEL)
#           User name of this pool
#       cl_active (GAUGE)
#           Client connections that are linked to server connection and can process queries
#       cl_waiting (GAUGE)
#           Client connections that have sent queries but have not yet got a server connection
#       cl_cancel_req (GAUGE)
#           Client connections that have not forwarded query cancellations to the server yet.
#       sv_active (GAUGE)
#           Server connections that are linked to a client
#       sv_idle (GAUGE)
#           Server connections that are unused and immediately usable for client queries
#       sv_used (GAUGE)
#           Server connections that have been idle for more than server_check_delay (means have to run check query)
#       sv_tested (GAUGE)
#           Server connections that are currently running reset or check query
#       sv_login (GAUGE)
#           Server connections currently in the process of logging in
#       maxwait (GAUGE)
#           How long the first(oldest) client in the queue has waited, in seconds, key metric
#       maxwait_us (GAUGE)
#           Microsecond part of the maximum waiting time.
#       pool_mode (LABEL)
#           Pooling mode in use
#
pgbouncer_pool_116:
    name: pgbouncer_pool
    desc: Pgbouncer pool stats (1.16+)
    query: SHOW POOLS;
    tags:
        - pgbouncer
    ttl: 10
    timeout: 0.1
    min_version: 11600
    max_version: 0
    fatal: false
    skip: false
    metrics:
        - database:
            name: database
            usage: LABEL
            rename: datname
            description: Database name of this pool
        - user:
            name: user
            usage: LABEL
            description: User name of this pool
        - cl_active:
            name: cl_active
            usage: GAUGE
            rename: active_clients
            description: Client connections that are linked to server connection and can process queries
        - cl_waiting:
            name: cl_waiting
            usage: GAUGE
            rename: waiting_clients
            description: Client connections that have sent queries but have not yet got a server connection
        - cl_cancel_req:
            name: cl_cancel_req
            usage: GAUGE
            rename: cancel_clients
            description: Client connections that have not forwarded query cancellations to the server yet.
        - sv_active:
            name: sv_active
            usage: GAUGE
            rename: active_servers
            description: Server connections that are linked to a client
        - sv_idle:
            name: sv_idle
            usage: GAUGE
            rename: idle_servers
            description: Server connections that are unused and immediately usable for client queries
        - sv_used:
            name: sv_used
            usage: GAUGE
            rename: used_servers
            description: Server connections that have been idle for more than server_check_delay (means have to run check query)
        - sv_tested:
            name: sv_tested
            usage: GAUGE
            rename: tested_servers
            description: Server connections that are currently running reset or check query
        - sv_login:
            name: sv_login
            usage: GAUGE
            rename: login_servers
            description: Server connections currently in the process of logging in
        - maxwait:
            name: maxwait
            usage: GAUGE
            description: How long the first(oldest) client in the queue has waited, in seconds, key metric
        - maxwait_us:
            name: maxwait_us
            usage: GAUGE
            description: Microsecond part of the maximum waiting time.
        - pool_mode:
            name: pool_mode
            usage: LABEL
            description: Pooling mode in use


